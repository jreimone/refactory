<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="rolemapping"
    nsURI="http://www.emftext.org/language/rolemapping" nsPrefix="rolemapping">
  <eClassifiers xsi:type="ecore:EClass" name="RoleMappingModel">
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetMetamodel" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EPackage"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mappings" lowerBound="1"
        upperBound="-1" eType="#//Mapping" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Mapping">
    <eOperations name="getAllMappedRoles" upperBound="-1" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.roles.Role > roles = new org.eclipse.emf.common.util.BasicEList &lt; org.emftext.language.refactoring.roles.Role > ( ) ; &#xD;&#xA;org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.ConcreteMapping > mappings = getRoleToMetaelement ( ) ; &#xD;&#xA;for ( org.emftext.language.refactoring.rolemapping.ConcreteMapping concreteMapping : mappings ) { &#xD;&#xA;&#x9;roles .add ( concreteMapping .getRole ( ) ) ; &#xD;&#xA;} &#xD;&#xA;return roles ; &#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getMappedRolesForEObject" upperBound="-1" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.roles.Role > mappedRoles = new org.eclipse.emf.common.util.BasicEList &lt; org.emftext.language.refactoring.roles.Role > ( ) ; &#xD;&#xA;org.eclipse.emf.ecore.EClass metaclass = object .eClass ( ) ; &#xD;&#xA;org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.ConcreteMapping > mappings = getRoleToMetaelement ( ) ; &#xD;&#xA;for ( org.emftext.language.refactoring.rolemapping.ConcreteMapping concreteMapping : mappings ) { &#xD;&#xA;&#x9;org.emftext.language.refactoring.roles.Role mappedRole = concreteMapping .getRole ( ) ; &#xD;&#xA;&#x9;org.eclipse.emf.ecore.EClass mappedClass = concreteMapping .getMetaclass ( ) ; &#xD;&#xA;&#x9;if ( mappedClass .equals ( metaclass ) ) { &#xD;&#xA;&#x9;&#x9;mappedRoles .add ( mappedRole ) ; &#xD;&#xA;&#x9;} &#xD;&#xA;&#x9;if ( mappedRole .getModifier ( ) .contains ( org.emftext.language.refactoring.roles.RoleModifier .SUPER ) ) { &#xD;&#xA;&#x9;&#x9;if ( mappedClass .isSuperTypeOf ( metaclass ) ) { &#xD;&#xA;&#x9;&#x9;&#x9;mappedRoles .add ( mappedRole ) ; &#xD;&#xA;&#x9;&#x9;} &#xD;&#xA;&#x9;} &#xD;&#xA;} &#xD;&#xA;return mappedRoles ; &#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="object" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EObject"/>
    </eOperations>
    <eOperations name="getEClassForRole" lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.ConcreteMapping > mappings = getRoleToMetaelement ( ) ; &#xD;&#xA;for ( org.emftext.language.refactoring.rolemapping.ConcreteMapping mapping : mappings ) { &#xD;&#xA;&#x9;if ( mapping .getRole ( ) .equals ( role ) ) { &#xD;&#xA;&#x9;&#x9;return mapping .getMetaclass ( ) ; &#xD;&#xA;&#x9;} &#xD;&#xA;} &#xD;&#xA;return null ; &#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="role" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role"/>
    </eOperations>
    <eOperations name="getConcreteMappingForRole" lowerBound="1" eType="#//ConcreteMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.ConcreteMapping > mappings = getRoleToMetaelement ( ) ; &#xD;&#xA;for ( org.emftext.language.refactoring.rolemapping.ConcreteMapping mapping : mappings ) { &#xD;&#xA;&#x9;if ( mapping .getRole ( ) .equals ( role ) ) { &#xD;&#xA;&#x9;&#x9;return mapping ; &#xD;&#xA;&#x9;} &#xD;&#xA;} &#xD;&#xA;return null ; &#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="role" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mappedRoleModel" lowerBound="1"
        eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//RoleModel"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="roleToMetaelement" lowerBound="1"
        upperBound="-1" eType="#//ConcreteMapping" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConcreteMapping">
    <eOperations name="getRelationMappingForTargetRole" lowerBound="1" eType="#//RelationMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.RelationMapping > mappings = getOutgoingRelationMappings ( ) ; &#xD;&#xA;for ( org.emftext.language.refactoring.rolemapping.RelationMapping relationMapping : mappings ) { &#xD;&#xA;&#x9;org.eclipse.emf.ecore.util.EcoreUtil .resolveAll ( relationMapping ) ; &#xD;&#xA;&#x9;org.emftext.language.refactoring.roles.MultiplicityRelation relation = relationMapping .getRelation ( ) ; &#xD;&#xA;&#x9;if ( relation .getTarget ( ) .equals ( role ) ) { &#xD;&#xA;&#x9;&#x9;return relationMapping ; &#xD;&#xA;&#x9;} &#xD;&#xA;} &#xD;&#xA;return null ; &#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="role" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role"/>
    </eOperations>
    <eOperations name="getAttributeMappingForAttribute" lowerBound="1" eType="#//AttributeMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if ( attribute == null ) { &#xD;&#xA;&#x9;return null ; &#xD;&#xA;} &#xD;&#xA;java.util.List &lt; org.emftext.language.refactoring.rolemapping.AttributeMapping > attributeMappings = getAttributeMappings ( ) ; &#xD;&#xA;for ( org.emftext.language.refactoring.rolemapping.AttributeMapping attributeMapping : attributeMappings ) { &#xD;&#xA;&#x9;if ( attributeMapping .getRoleAttribute ( ) .equals ( attribute ) ) { &#xD;&#xA;&#x9;&#x9;return attributeMapping ; &#xD;&#xA;&#x9;} &#xD;&#xA;} &#xD;&#xA;return null ; &#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="attribute" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//RoleAttribute"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="role" lowerBound="1" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metaclass" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outgoingRelationMappings"
        upperBound="-1" eType="#//RelationMapping" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributeMappings" upperBound="-1"
        eType="#//AttributeMapping" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RelationMapping">
    <eStructuralFeatures xsi:type="ecore:EReference" name="relation" lowerBound="1"
        eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//MultiplicityRelation"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referenceMetaClassPair"
        lowerBound="1" upperBound="-1" eType="#//ReferenceMetaClassPair" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeMapping">
    <eStructuralFeatures xsi:type="ecore:EReference" name="roleAttribute" lowerBound="1"
        eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//RoleAttribute"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="classAttribute" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EAttribute"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceMetaClassPair">
    <eStructuralFeatures xsi:type="ecore:EReference" name="reference" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EReference"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metaClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
  </eClassifiers>
</ecore:EPackage>
