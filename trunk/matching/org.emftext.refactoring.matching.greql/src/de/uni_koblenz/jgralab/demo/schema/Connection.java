/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.demo.schema;

import de.uni_koblenz.jgralab.EdgeDirection;

import de.uni_koblenz.jgralab.demo.schema.Node;
/**
 * FromVertexClass: Node
 * FromRoleName : source
 * ToVertexClass: Node
 * ToRoleName : target
 */

public interface Connection extends de.uni_koblenz.jgralab.Edge {

	public static final de.uni_koblenz.jgralab.schema.EdgeClass EC = de.uni_koblenz.jgralab.demo.schema.GraphSchema.instance().getGraphClass().getEdgeClass("Connection");

	public de.uni_koblenz.jgralab.demo.schema.ConnectionType get_connectionType();

	public void set_connectionType(de.uni_koblenz.jgralab.demo.schema.ConnectionType _connectionType);

	public java.lang.String get_name();

	public void set_name(java.lang.String _name);

	public java.lang.String get_source();

	public void set_source(java.lang.String _source);

	public java.lang.String get_target();

	public void set_target(java.lang.String _target);

	/**
	 * @return the next de.uni_koblenz.jgralab.demo.schema.Connection edge in the global edge sequence
	 */
	public de.uni_koblenz.jgralab.demo.schema.Connection getNextConnectionInGraph();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralab.demo.schema.Connection at the "this" vertex
	 */
	public de.uni_koblenz.jgralab.demo.schema.Connection getNextConnectionIncidence();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralab.demo.schema.Connection at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralab.demo.schema.Connection getNextConnectionIncidence(EdgeDirection orientation);
	public Node getAlpha();
	public Node getOmega();
}
