/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.demo.schema.impl.std;

import de.uni_koblenz.jgralab.impl.std.EdgeImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.Vertex;
import de.uni_koblenz.jgralab.exception.GraphIOException;
import de.uni_koblenz.jgralab.exception.NoSuchAttributeException;

import de.uni_koblenz.jgralab.demo.schema.impl.std.ReversedInheritanceImpl;

import de.uni_koblenz.jgralab.demo.schema.Node;

import java.io.IOException;
/**
 * FromVertexClass: Node
 * FromRoleName : child
 * ToVertexClass: Node
 * ToRoleName : parent
 */

public class InheritanceImpl extends EdgeImpl implements de.uni_koblenz.jgralab.Edge, de.uni_koblenz.jgralab.demo.schema.Inheritance {

	protected java.lang.String _child;

	protected java.lang.String _parent;

	public InheritanceImpl(int id, de.uni_koblenz.jgralab.Graph g, Vertex alpha, Vertex omega) {
		super(id, g, alpha, omega);
		((de.uni_koblenz.jgralab.impl.InternalGraph) graph).addEdge(this, alpha, omega);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.EdgeClass getAttributedElementClass() {
		return de.uni_koblenz.jgralab.demo.schema.Inheritance.EC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Edge> getSchemaClass() {
		return de.uni_koblenz.jgralab.demo.schema.Inheritance.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("child")) return (T) get_child();
		if (attributeName.equals("parent")) return (T) get_parent();
		throw new NoSuchAttributeException("Inheritance doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("child")) {
			set_child((java.lang.String) data);
			return;
		}
		if (attributeName.equals("parent")) {
			set_parent((java.lang.String) data);
			return;
		}
		throw new NoSuchAttributeException("Inheritance doesn't contain an attribute " + attributeName);
	}

	public java.lang.String get_child() {
		return _child;
	}

	public void set_child(java.lang.String _child) {
		ecaAttributeChanging("child", this._child, _child);
		Object oldValue = this._child;
		this._child = _child;
		graphModified();
		ecaAttributeChanged("child", oldValue, _child);
	}

	public java.lang.String get_parent() {
		return _parent;
	}

	public void set_parent(java.lang.String _parent) {
		ecaAttributeChanging("parent", this._parent, _parent);
		Object oldValue = this._parent;
		this._parent = _parent;
		graphModified();
		ecaAttributeChanged("parent", oldValue, _parent);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		_child = io.matchUtfString();
		set_child(_child);
		_parent = io.matchUtfString();
		set_parent(_parent);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("child")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_child = io.matchUtfString();
			set_child(_child);
			return;
		}
		if (attributeName.equals("parent")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_parent = io.matchUtfString();
			set_parent(_parent);
			return;
		}
		throw new NoSuchAttributeException("Inheritance doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		io.writeUtfString(_child);
		io.writeUtfString(_parent);
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("child")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_child);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("parent")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_parent);
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("Inheritance doesn't contain an attribute " + attributeName);
	}

	public de.uni_koblenz.jgralab.demo.schema.Inheritance getNextInheritanceInGraph() {
		return (de.uni_koblenz.jgralab.demo.schema.Inheritance)getNextEdge(de.uni_koblenz.jgralab.demo.schema.Inheritance.EC);
	}

	public de.uni_koblenz.jgralab.demo.schema.Inheritance getNextInheritanceIncidence() {
		return (de.uni_koblenz.jgralab.demo.schema.Inheritance)getNextIncidence(de.uni_koblenz.jgralab.demo.schema.Inheritance.EC);
	}

	public de.uni_koblenz.jgralab.demo.schema.Inheritance getNextInheritanceIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.demo.schema.Inheritance)getNextIncidence(de.uni_koblenz.jgralab.demo.schema.Inheritance.EC, orientation);
	}

	public de.uni_koblenz.jgralab.schema.AggregationKind getAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.NONE;
	}

	@Override
	public de.uni_koblenz.jgralab.schema.AggregationKind getAlphaAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.NONE;
	}

	@Override
	public de.uni_koblenz.jgralab.schema.AggregationKind getOmegaAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.NONE;
	}

	protected de.uni_koblenz.jgralab.impl.ReversedEdgeBaseImpl createReversedEdge() {
		return new ReversedInheritanceImpl(this, graph);
	}
	public Node getAlpha() {
		return (Node) super.getAlpha();
	}
	public Node getOmega() {
		return (Node) super.getOmega();
	}
}
