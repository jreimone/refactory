<project basedir="." default="generate-emftext-languages-text-resources" name="Build EMFText text resource">
	<property file="local.build.properties"/>
	
	<property name="emftext.plugins.dir" value=".."/>
	<property name="language.plugins.dir" value=".."/>
	<property name="test.plugins.dir" value=".."/>
	<property name="ontomopp.plugins.dir" value=".."/>
	<property name="refactory.plugins.dir" value=".."/>
	
		<!-- Define the EMF Generate Resource task. To have this task available, the plugin
	     org.emftext.sdk.ant must be available in the classpath. To ensure this the external tools
	     configuration needs to have the setting "Run in the same JRE as the workspace" enabled. -->
	<taskdef name="emftext-generate-text-resource" classname="org.emftext.sdk.ant.GenerateTextResourceTask">
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.ant/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.antlr3_3_0/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.automaton/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.codegen/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.codegen.antlr/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.codegen.resource/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.codegen.resource.ui/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.concretesyntax/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.concretesyntax.resource.cs/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.concretesyntax.resource.cs.ui/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.concretesyntax.resource.cs.post_processing/bin" />
		<!-- for ecore text resource support -->
		<classpath path="${language.plugins.dir}/org.emftext.language.ecore.resource/bin" />	
		<classpath path="${language.plugins.dir}/org.emftext.language.ecore.resource.ecore/bin" />	
		<classpath path="${language.plugins.dir}/org.emftext.language.ecore.resource.text/bin" />
		<!-- the validation plugins might not be loaded yet -->
		<classpath>
			<fileset dir="${eclipse.home}/">
				<include name="plugins/org.eclipse.emf.validation*.jar"/>
			</fileset>
		</classpath>
	</taskdef>
	
	<!-- for ecore text resource support -->
	<taskdef name="emftext-register-ecore-resource-factory" classname="org.emftext.sdk.ant.RegisterEcoreResourceFactoryTask">
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.ant/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.antlr3_3_0/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.automaton/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.codegen/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.concretesyntax/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.concretesyntax.resource.cs/bin" />
		<classpath path="${language.plugins.dir}/org.emftext.language.ecore.resource/bin" />	
		<classpath path="${language.plugins.dir}/org.emftext.language.ecore.resource.ecore/bin" />	
		<classpath path="${language.plugins.dir}/org.emftext.language.ecore.resource.text/bin" />
	</taskdef>

	<!-- needed to register some URI mappings -->
	<taskdef name="emftext-register-uri-mapping" classname="org.emftext.sdk.ant.RegisterURIMappingTask">
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.ant/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.antlr3_3_0/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.automaton/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.codegen/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.concretesyntax/bin" />
		<classpath path="${emftext.plugins.dir}/org.emftext.sdk.concretesyntax.resource.cs/bin" />
	</taskdef>

	<!-- A macro for generating one text resource plug-in -->
	<macrodef name="generate-text-resource">
	    <attribute name="plugin"/>
	    <attribute name="syntax"/>
		<attribute name="dir" default="${language.plugins.dir}" />
		<attribute name="resourcePlugin" default="@{plugin}.resource.@{syntax}" />
			
		<sequential>
			<!-- <delete dir="@{dir}/@{resourcePlugin}/src-gen" includes="**/*" excludes=".svn"/> -->
			<echo message="Building text resource for syntax '@{syntax}' in plug-in '@{plugin}'" />
			
			<emftext-generate-text-resource 
				syntax="@{dir}/@{plugin}/metamodel/@{syntax}.cs" 
				rootFolder="@{dir}" 
				syntaxProjectName="@{plugin}"
				generateANTLRPlugin="false"
				generateModelCode="false"
				>
			</emftext-generate-text-resource>
		</sequential>
	</macrodef>

	<macrodef name="generate-metamodel-code">
	    <attribute name="plugin"/>
	    <attribute name="model"/>
	    <attribute name="generateEditProject"/>
	    <attribute name="clear" default="**/*.java" />
	    <attribute name="secondaryExtension" default="" />	
	    <attribute name="secondaryGenmodelExtension" default="" />	
	    <attribute name="dir" default="${language.plugins.dir}" />
			
		<sequential>
			<!-- <delete dir="${language.plugins.dir}/@{plugin}/src-gen" includes="@{clear}" excludes=".svn"/>
			<eclipse.refreshLocal depth="infinite" resource="@{plugin}"/> -->
			<echo message="${language.plugins.dir}/@{plugin}/metamodel/@{model}@{secondaryExtension}.ecore" />
			<emf.Ecore2Java 
				model="@{dir}/@{plugin}/metamodel/@{model}@{secondaryExtension}.ecore" 
				genModel="@{dir}/@{plugin}/metamodel/@{model}@{secondaryGenmodelExtension}.genmodel" 
				generateeditproject="@{generateEditProject}" 
				generateeditorproject="false"
				generatetestsproject="false"
				modelProject="@{dir}/@{plugin}" 
				modelProjectFragmentPath="src-gen"
				reconcileGenModel="keep"
			/>
			
			<eclipse.refreshLocal depth="infinite" resource="@{plugin}"/>
		</sequential>
	</macrodef>
	
	<target name="generate-ecore-text-text-resources" depends="register-gen-model,generate-ecore-text-code,refresh-ecore-text-plugins">
	</target>

	<target name="generate-ecore-text-code" depends="register-gen-model">
		<generate-text-resource plugin="org.emftext.language.ecore.resource.text"   syntax="text.ecore" resourcePlugin="org.emftext.language.ecore.resource.text"/>
		<generate-text-resource plugin="org.emftext.language.ecore.resource.facade" syntax="facade.ecore" resourcePlugin="org.emftext.language.ecore.resource.facade"/>
	</target>

	<target name="refresh-ecore-text-plugins" unless="headless">
		<eclipse.refreshLocal depth="infinite" resource="${language.plugins.dir}/org.emftext.language.ecore.resource.facade"/>
		<eclipse.refreshLocal depth="infinite" resource="${language.plugins.dir}/org.emftext.language.ecore.resource.facade.ui"/>
		<eclipse.refreshLocal depth="infinite" resource="${language.plugins.dir}/org.emftext.language.ecore.resource.text"/>
		<eclipse.refreshLocal depth="infinite" resource="${language.plugins.dir}/org.emftext.language.ecore.resource.text.ui"/>
	</target>
	
	<target name="run-all-tests">
		<property name="test_result_dir" value="${basedir}/test_results"/>

		<delete>
			<fileset dir="${test_result_dir}">
			    <include name="*.txt"/>
			</fileset>
		</delete>
		
		<ant antfile="${basedir}/run-emftext-tests.xml">
			<property name="test_result_dir" value="${test_result_dir}"/>
		</ant>
		<ant antfile="${basedir}/run-emftext-language-tests.xml">
			<property name="test_result_dir" value="${test_result_dir}"/>
		</ant>
	</target>

	<!-- run 'generate-ecore-text-text-resources' first! -->
	<target name="generate-emftext-languages-text-resources" depends="generate-emftext-languages-metamodel-code,generate-emftext-text-resources" description="Generate the EMF text resource plug-ins for all languages">
		<eclipse.refreshLocal depth="infinite" resource="/"/>
	</target>

	<target name="generate-emftext-languages-metamodel-code">
		
		<emftext-register-ecore-resource-factory 
			className="org.emftext.language.ecore.resource.text.mopp.TextEcoreResourceFactory" 
			type="text"/>
		
		<parallel threadsperprocessor="4">
<!--GENERATE_METAMODEL_TASKS-->
		</parallel>
	</target>

	<!-- A task for generating text resource plug-ins for all EMFText languages -->
	<target name="generate-emftext-text-resources">
		
		<emftext-register-ecore-resource-factory 
			className="org.emftext.language.ecore.resource.text.mopp.TextEcoreResourceFactory" 
			type="text"/>
		
		<emftext-register-uri-mapping
			from="platform:/plugin/org.emftext.language.java/"
			to="platform:/resource/org.emftext.language.java/"
		/>
		
<!--GENERATE_TEXT_RESOURCE_TASKS-->
	</target>
	
	<target name="clean">
<!--CLEAN_TASKS-->
	</target>
	
	<!-- register new custom task for registering gen-model -->
	<taskdef name="emftext-register-gen-model" classname="org.emftext.sdk.ant.RegisterGenModelTask">
	</taskdef>	
	
	<target name="register-gen-model" if="headless">
		<emftext-register-gen-model NamespaceURI="http://www.eclipse.org/emf/2002/Ecore" GenModelURI="jar:file:/home/hudson/build_server/libs/plugins/org.eclipse.emf.ecore_2.6.1.v20100914-1218.jar!/model/Ecore.genmodel" />
		<emftext-register-gen-model NamespaceURI="http://www.eclipse.org/emf/2002/GenModel" GenModelURI="jar:file:/home/hudson/build_server/libs/plugins/org.eclipse.emf.codegen.ecore_2.6.1.v20100914-1218.jar!/model/GenModel.genmodel" />
	</target>
</project>