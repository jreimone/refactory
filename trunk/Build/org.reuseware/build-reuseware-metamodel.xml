<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [<!ENTITY buildfile SYSTEM "file:./build-user.xml">]>

<!-- 
	Tasks to generate the Reuseware metamodel and text syntax code.
-->

<project basedir="." default="generate-all" name="Reuseware">
	<property file="local.build.properties"/>

	<taskdef name="fujaba-generate-metamodel-code" classname="de.uni_paderborn.fujaba.ant.FujabaGenTask2">
		<classpath path="${workspace}/org.reuseware/bin"/>
		<classpath location="${workspace}/org.reuseware/fujaba/libs/fujaba.jar"/>
		<classpath location="${workspace}/org.reuseware/fujaba/libs/jface-interface.jar"/>
		<classpath location="${workspace}/org.reuseware/fujaba/libs/RuntimeTools.jar"/>
		<classpath location="${workspace}/org.reuseware/fujaba/libs/features.jar"/>
		<classpath location="${workspace}/org.reuseware/fujaba/libs/util.jar"/>
		<classpath location="${workspace}/org.reuseware/fujaba/libs/log4j.jar"/>
		<classpath location="${workspace}/org.reuseware/fujaba/libs/AppIndependent.jar"/>
		<classpath location="${workspace}/org.reuseware/fujaba/libs/coobra2.jar"/>
		<classpath location="${workspace}/org.reuseware/fujaba/libs/trove.jar"/>
	</taskdef>

	<!-- Define the EMF Generate Resource task. To have this task available, the plugin
	     org.emftext.sdk.ant must be available in the classpath  -->
	<taskdef name="emftext-generate-text-resource" classname="org.emftext.sdk.ant.GenerateTextResourceTask">
	</taskdef>
	
	<!-- A macro for generating one text resource plug-in -->
	<macrodef name="generate-text-resource">
	    <attribute name="plugin"/>
	    <attribute name="syntax"/>
		
		<sequential>
			<echo message="Building text resource for syntax '@{syntax}' in plug-in '@{plugin}'" />
				
			<emftext-generate-text-resource syntax="${workspace}/@{plugin}/model/@{syntax}.cs" rootFolder="../.." syntaxProjectName="@{plugin}">
			</emftext-generate-text-resource>
		</sequential>
	</macrodef>

	<macrodef name="buildexampleplugin" >
	    <attribute name="wizardproject"/>
	    <attribute name="examplepackage"/>
	    <attribute name="exampleproject"/>
		<attribute name="title"/>
		<attribute name="description"/>
		<attribute name="java" default="false"/>
		
	    <sequential>
	    	<!-- Create the wizard -->
	    	<copy file="ExampleUnzipperNewWizard.java.template" 
	    		tofile="../@{wizardproject}/src-example/@{examplepackage}/ExampleUnzipperNewWizard.java"/>
	    	<replace file="../@{wizardproject}/src-example/@{examplepackage}/ExampleUnzipperNewWizard.java"
	    		token="PAGE_TITLE" value="@{title}"/>
	    	<replace file="../@{wizardproject}/src-example/@{examplepackage}/ExampleUnzipperNewWizard.java"
	    		token="PAGE_DESCRIPTION" value="@{description}"/>
	    	<replace file="../@{wizardproject}/src-example/@{examplepackage}/ExampleUnzipperNewWizard.java"
	    		token="PROJECT_NAME" value="@{exampleproject}"/>
	    	<replace file="../@{wizardproject}/src-example/@{examplepackage}/ExampleUnzipperNewWizard.java"
	    		token="PLUGIN_ID" value="@{wizardproject}"/>
	    	<replace file="../@{wizardproject}/src-example/@{examplepackage}/ExampleUnzipperNewWizard.java"
	    		token="NEEDS_JAVA" value="@{java}"/>
		    <!-- Clear the 'out' folder which might contain something from running the tests -->
		    <delete dir="../@{exampleproject}/out" excludes=".*" includeemptydirs="true"/>
	    	<!--- Create the example zip file -->
	    	<zip destfile="../@{wizardproject}/example.zip">
	    		<fileset dir="../@{exampleproject}" excludes="**/.svn"/>	
	    	</zip>
	    </sequential>
	</macrodef>
	
	<target name="generate-all" depends="generate-emf,generate-emftext,generate-examples"/>

	<target name="clean-fujaba">
		<delete dir="${workspace}/org.reuseware.coconut/metamodel/generated/models"/>
		<delete dir="${workspace}/org.reuseware.coconut/metamodel/generated/org"/>
		
		<delete dir="${workspace}/org.reuseware/fujaba/config/fujaba5.3.1/projects.workspace" includes="*"/>
	</target>
	
	<target name="generate-fujaba" depends="clean-fujaba">
		<fujaba-generate-metamodel-code 
			configDir="${workspace}/org.reuseware/fujaba/config"
			pluginFolder="${workspace}/org.reuseware/fujaba/plugins"
			depFileName="${workspace}/org.reuseware.coconut/metamodel/Ecore.ctr" 
			fileName="${workspace}/org.reuseware.coconut/metamodel/ReusewareMetamodel.ctr" 
			destDirname="/generated"/>
	</target>
	
	<target name="clean-emf">
		<delete dir="${workspace}/org.reuseware.coconut.id/src-gen/org"/>
		<delete dir="${workspace}/org.reuseware.coconut.fracol/src-gen/org"/>
		<delete dir="${workspace}/org.reuseware.coconut.reuseextension/src-gen/org"/>
		<delete dir="${workspace}/org.reuseware.coconut.reuseextensionactivator/src-gen/org"/>
		<delete dir="${workspace}/org.reuseware.coconut.fragment/src-gen/org"/>
		<delete dir="${workspace}/org.reuseware.coconut.compositionprogram/src-gen/org"/>
		
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.id"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.fracol"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.reuseextension"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.reuseextensionactivator"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.fragment"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.compositionprogram"/>
	</target>
	
	<target name="prepare-emf" depends="generate-fujaba">
		<!-- Place Fujaba-generated src files with method bodies -->
		<copy todir="${workspace}/org.reuseware.coconut.id/src-gen/org/reuseware/coconut/">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/org/reuseware/coconut">
				<include name="id/impl/**"/>
			</fileset> 
		</copy>
		<copy todir="${workspace}/org.reuseware.coconut.fracol/src-gen/org/reuseware/coconut/">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/org/reuseware/coconut">
				<include name="fracol/impl/**"/>
			</fileset> 
		</copy>
		<copy todir="${workspace}/org.reuseware.coconut.reuseextension/src-gen/org/reuseware/coconut/">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/org/reuseware/coconut">
				<include name="reuseextension/impl/**"/>
			</fileset> 
		</copy>
		<copy todir="${workspace}/org.reuseware.coconut.reuseextensionactivator/src-gen/org/reuseware/coconut/">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/org/reuseware/coconut">
				<include name="reuseextensionactivator/impl/**"/>
			</fileset> 
		</copy>
		<copy todir="${workspace}/org.reuseware.coconut.fragment/src-gen/org/reuseware/coconut/">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/org/reuseware/coconut">
				<include name="fragment/impl/**"/>
			</fileset> 
		</copy>
		<copy todir="${workspace}/org.reuseware.coconut.compositionprogram/src-gen/org/reuseware/coconut/">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/org/reuseware/coconut">
				<include name="compositionprogram/impl/**"/>
			</fileset> 
		</copy>
		
		<!-- adjust path in metamodels to qualified plugin path -->
		<replace dir="${workspace}/org.reuseware.coconut/metamodel/generated/models" token=" id.ecore" value=" ../../org.reuseware.coconut.id/model/id.ecore"/>
		<replace dir="${workspace}/org.reuseware.coconut/metamodel/generated/models" token=" fracol.ecore" value=" ../../org.reuseware.coconut.fracol/model/fracol.ecore"/>
		<replace dir="${workspace}/org.reuseware.coconut/metamodel/generated/models" token=" reuseextension.ecore" value=" ../../org.reuseware.coconut.reuseextension/model/reuseextension.ecore"/>
		<replace dir="${workspace}/org.reuseware.coconut/metamodel/generated/models" token=" reuseextensionactivator.ecore" value=" ../../org.reuseware.coconut.reuseextensionactivator/model/reuseextensionactivator.ecore"/>
		<replace dir="${workspace}/org.reuseware.coconut/metamodel/generated/models" token=" fragment.ecore" value=" ../../org.reuseware.coconut.fragment/model/fragment.ecore"/>
		<replace dir="${workspace}/org.reuseware.coconut/metamodel/generated/models" token=" compositionprogram.ecore" value=" ../../org.reuseware.coconut.compositionprogram/model/compositionprogram.ecore"/>	

		<!-- copy metamodels to model folders -->
		<copy todir="${workspace}/org.reuseware.coconut.id/model">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/models">
				<include name="id.*"/>
			</fileset>
		</copy>
		<copy todir="${workspace}/org.reuseware.coconut.fracol/model">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/models">
				<include name="fracol.*"/>
			</fileset>
		</copy>
		<copy todir="${workspace}/org.reuseware.coconut.reuseextension/model">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/models">
				<include name="reuseextension.*"/>
			</fileset>
		</copy>
		<copy todir="${workspace}/org.reuseware.coconut.reuseextensionactivator/model">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/models">
				<include name="reuseextensionactivator.*"/>
			</fileset>
		</copy>
		<copy todir="${workspace}/org.reuseware.coconut.fragment/model">
			<fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/models">
				<include name="fragment.*"/>
			</fileset>
		</copy>
		<copy todir="${workspace}/org.reuseware.coconut.compositionprogram/model">
		    <fileset dir="${workspace}/org.reuseware.coconut/metamodel/generated/models">
				<include name="compositionprogram.*"/>
			</fileset>
		</copy>
		
		<!-- move validators to 'src-gen' for evolution -->
		<move file="${workspace}/org.reuseware.coconut.fracol/src-validator/org/reuseware/coconut/fracol/util/FracolValidator.java"
			todir="${workspace}/org.reuseware.coconut.fracol/src-gen/org/reuseware/coconut/fracol/util"/>
		<move file="${workspace}/org.reuseware.coconut.reuseextension/src-validator/org/reuseware/coconut/reuseextension/util/ReuseextensionValidator.java"
			todir="${workspace}/org.reuseware.coconut.reuseextension/src-gen/org/reuseware/coconut/reuseextension/util"/>
		<move file="${workspace}/org.reuseware.coconut.reuseextensionactivator/src-validator/org/reuseware/coconut/reuseextensionactivator/util/ReuseextensionactivatorValidator.java"
			todir="${workspace}/org.reuseware.coconut.reuseextensionactivator/src-gen/org/reuseware/coconut/reuseextensionactivator/util"/>
		<move file="${workspace}/org.reuseware.coconut.compositionprogram/src-validator/org/reuseware/coconut/compositionprogram/util/CompositionprogramValidator.java"
			todir="${workspace}/org.reuseware.coconut.compositionprogram/src-gen/org/reuseware/coconut/compositionprogram/util"/>
	</target>
	
	<target name="generate-emf" depends="clean-emf,prepare-emf">	
		<!-- refresh required for EMF tools -->
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.id"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.fracol"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.reuseextension"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.reuseextensionactivator"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.fragment"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.compositionprogram"/>
			
		<!-- EMF CodeGen -->
		<emf.Ecore2Java model="${workspace}/org.reuseware.coconut.id/model/id.ecore" 
		                genModel="${workspace}/org.reuseware.coconut.id/model/id.genmodel" 
		 				generateeditproject="true"
		                reconcilegenmodel="reload">
		 </emf.Ecore2Java>
		 <emf.Ecore2Java model="${workspace}/org.reuseware.coconut.fracol/model/fracol.ecore" 
		                genModel="${workspace}/org.reuseware.coconut.fracol/model/fracol.genmodel" 
						generateeditproject="true"
		                reconcilegenmodel="reload">
		 </emf.Ecore2Java>

		 <emf.Ecore2Java model="${workspace}/org.reuseware.coconut.reuseextension/model/reuseextension.ecore" 
		                genModel="${workspace}/org.reuseware.coconut.reuseextension/model/reuseextension.genmodel" 
						generateeditproject="true"
		                reconcilegenmodel="reload">
		 </emf.Ecore2Java>

		 <emf.Ecore2Java model="${workspace}/org.reuseware.coconut.reuseextensionactivator/model/reuseextensionactivator.ecore" 
		                genModel="${workspace}/org.reuseware.coconut.reuseextensionactivator/model/reuseextensionactivator.genmodel" 
						generateeditproject="true"
		                reconcilegenmodel="reload">
		 </emf.Ecore2Java>

		 <emf.Ecore2Java model="${workspace}/org.reuseware.coconut.fragment/model/fragment.ecore" 
		                genModel="${workspace}/org.reuseware.coconut.fragment/model/fragment.genmodel" 
						generateeditproject="true"
		                reconcilegenmodel="reload">
		 </emf.Ecore2Java>	

		 <emf.Ecore2Java model="${workspace}/org.reuseware.coconut.compositionprogram/model/compositionprogram.ecore" 
		                genModel="${workspace}/org.reuseware.coconut.compositionprogram/model/compositionprogram.genmodel" 
		 				generateeditproject="true"
		                reconcilegenmodel="reload">
		 </emf.Ecore2Java>
		
		<!-- move validators back to 'src' -->
		<move file="${workspace}/org.reuseware.coconut.fracol/src-gen/org/reuseware/coconut/fracol/util/FracolValidator.java"
			todir="${workspace}/org.reuseware.coconut.fracol/src-validator/org/reuseware/coconut/fracol/util"/>
		<move file="${workspace}/org.reuseware.coconut.reuseextension/src-gen/org/reuseware/coconut/reuseextension/util/ReuseextensionValidator.java"
			todir="${workspace}/org.reuseware.coconut.reuseextension/src-validator/org/reuseware/coconut/reuseextension/util"/>
		<move file="${workspace}/org.reuseware.coconut.reuseextensionactivator/src-gen/org/reuseware/coconut/reuseextensionactivator/util/ReuseextensionactivatorValidator.java"
			todir="${workspace}/org.reuseware.coconut.reuseextensionactivator/src-validator/org/reuseware/coconut/reuseextensionactivator/util"/>
		<move file="${workspace}/org.reuseware.coconut.compositionprogram/src-gen/org/reuseware/coconut/compositionprogram/util/CompositionprogramValidator.java"
			todir="${workspace}/org.reuseware.coconut.compositionprogram/src-validator/org/reuseware/coconut/compositionprogram/util"/>
		
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.id"/>		 	
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.fracol"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.reuseextension"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.reuseextensionactivator"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.fragment"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.compositionprogram"/>
		
	</target>

	<target name="generate-emftext">
		<generate-text-resource plugin="org.reuseware.coconut.fracol" syntax="fracol" />
		<generate-text-resource plugin="org.reuseware.coconut.reuseextension" syntax="rex" />
		<generate-text-resource plugin="org.reuseware.coconut.reuseextensionactivator" syntax="rex_activator" />
	
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.fracol.resource.fracol"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.reuseextension.resource.rex"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.reuseextensionactivator.resource.rexactivator"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.comogen.fracol.ui"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.comogen.reuseextension.ui"/>
		<eclipse.refreshLocal depth="infinite" resource="org.reuseware.coconut.reuseextensionactivator.ui"/>
	</target>
	
	<target name="generate-examples">
		<buildexampleplugin 
			exampleproject="org.modelplex.cim.tidlibrary"
			examplepackage="org/modelplex/cim/tidlibrary"
			wizardproject="org.reuseware.application.cim"
			title="MODELPLEX Project CIM Library"
			description="A library of CIM (Common Information Model) components that was developed in the Modelplex project."/>
		
		<buildexampleplugin 
			exampleproject="org.reuseware.application.taipan.example.taosd"
			examplepackage="org/reuseware/application/taipan/example/taosd"
			wizardproject="org.reuseware.application.taipan"
			title="TaiPan Composition Example"
			description="The example used in the Paper 'On Language-Independent Model Modularisation' published in Transactions on Aspect-Oriented Software Development VI (Springer, LNCS)."/>

		<buildexampleplugin 
			exampleproject="org.reuseware.application.classweaving"
			examplepackage="org/reuseware/application/classweaving"
			wizardproject="org.reuseware.application.classweaving.plugin"
			title="Class Weaving (UML/Ecore/Java)"
			description="This composition system demonstrates how Reuseware can be used for Aspect-Oriented Software Development (AOSD) by adding class weaving support to three different languages (UML, Ecore, and Java)."/>

		<buildexampleplugin 
			exampleproject="org.reuseware.application.cbse.exercise"
			examplepackage="org/reuseware/application/cbse/exercise"
			wizardproject="org.reuseware.application.cbse"
			title="CBSE Exercise (UML)"
			description="An exercise that was developed for students of the Component-Based Software Engineering (CBSE) course at TU Dresden. The exercise explores the development of composition systems with Reuseware on the example of UML Class Diagrams and UML State Machines. The exercise sheet is included in the example project."/>

		<buildexampleplugin 
			exampleproject="org.reuseware.application.swt2.exercise"
			examplepackage="org/reuseware/application/swt2/exercise"
			wizardproject="org.reuseware.application.swt2"
			title="SWT2 Exercise (UML)"
			description="An exercise that was developed for students of the Softwaretechnology II (SWT2) course at TU Dresden. The exercise explores the usage of Reuseware composition systems on the example of a composition system for UML Class Diagrams and UML State Machines. The exercise sheet is included in the example project."/>

		<buildexampleplugin java="true" 
			exampleproject="org.reuseware.application.reusejava"
			examplepackage="org/reuseware/application/reusejava"
			wizardproject="org.reuseware.application.reusejava.plugin"
			title="Example Composition System for Java"
			description="The Java-based example used in the Paper 'Round-trip Support for Invasive Software Composition Systems' (Software Composition 2009, Springer, LNCS)."/>

		<buildexampleplugin 
			exampleproject="org.reuseware.application.reuseuml"
			examplepackage="org/reuseware/application/reuseuml"
			wizardproject="org.reuseware.application.reuseuml.plugin"
			title="Example Composition System for UML"
			description="The UML-based example used in the Papers 'On Language-Independent Model Modularisation' (Transactions on Aspect-Oriented Software Development VI, Springer, LNCS) and 'Round-trip Support for Invasive Software Composition Systems' (Software Composition 2009, Springer, LNCS)."/>

		<buildexampleplugin java="true" 
			exampleproject="org.reuseware.application.uml2java"
			examplepackage="org/reuseware/application/uml2java"
			wizardproject="org.reuseware.application.uml2java.plugin"
			title="UML2Java Model Transformation defined as Composition System"
			description="This example demonstrates how a model transformation is defined with Reuseware on a simple UML-to-Java transformation."/>

		<buildexampleplugin java="true"
			exampleproject="org.reuseware.application.ticketshop"
			examplepackage="org/reuseware/application/ticketshop"
			wizardproject="org.reuseware.application.ticketshop.plugin"
			title="Example Application developed with the ModelSoC Approach"
			description="The example used in the Paper 'Concern-based (de)composition of Model-Driven Software Development Processes' (MoDELS 2010, Springer, LNCS) that introduces the ModelSoC approach for MDSD with multi-dimensional separation of concerns."/>

	</target>
	
</project>
