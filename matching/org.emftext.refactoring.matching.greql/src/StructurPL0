// JGraLab - The Java graph laboratory
//   Version : 7.2.0
//   Codename: Giraffatitan

TGraph 2;
Schema de.uni_koblenz.jgralab.demo.schema.GraphSchema;
GraphClass GraphModel;
EnumDomain ConnectionType (AGGREGATION, ASSOCIATION);
VertexClass Node { name: String };
EdgeClass Connection from Node (0,*) role source to Node (0,*) role target { connectionType: ConnectionType, name: String, source: String, target: String };
EdgeClass Inheritance from Node (1,1) role child to Node (1,1) role parent { child: String, parent: String };
Graph "ExampleGraph" 68 GraphModel (50 100 25 43);
Package ;
1 Node <1 15> "Program";
2 Node <-15 16 17 18 19 20 21 -22 -43> "Block";
3 Node <2 -16 -29> "VarDeclaration";
4 Node <3 -17> "ConstDeclaration";
5 Node <4 -18 22 -23> "ProcedureDeclaration";
6 Node <-2 -3 -40> "Declaration";
7 Node <-5 -6 -7 -8 -42> "Statement";
8 Node <5 23> "CallStatement";
9 Node <6 24 25 26> "IfStatement";
10 Node <-9 -10 -24 -27> "Condition";
11 Node <7 27 28> "WhileStatement";
12 Node <8 29 30> "Assignment";
13 Node <-11 -30 -31 -32 -33 -41> "Expression";
14 Node <9 31> "OddCondition";
15 Node <10 32 33> "RelationalCondition";
16 Node <11 34 35> "TermExpression";
17 Node <-34 36 37 -38> "Term";
18 Node <-35 38> "OptionalTerm";
19 Node <-12 -13 -14 -36 -39> "Factor";
20 Node <-37 39> "OptionalFactor";
21 Node <12 40> "IdentReference";
22 Node <13> "Number";
23 Node <14 41> "ExpressionFactor";
24 Node <-19 -25 -26 -28 42> "Body";
25 Node <-1 -4 -20 -21 43> "BlockOwner";
1 Inheritance "Program" "BlockOwner";
2 Inheritance "VarDeclaration" "Declaration";
3 Inheritance "ConstDeclaration" "Declaration";
4 Inheritance "ProcedureDeclaration" "BlockOwner";
5 Inheritance "CallStatement" "Statement";
6 Inheritance "IfStatement" "Statement";
7 Inheritance "WhileStatement" "Statement";
8 Inheritance "Assignment" "Statement";
9 Inheritance "OddCondition" "Condition";
10 Inheritance "RelationalCondition" "Condition";
11 Inheritance "TermExpression" "Expression";
12 Inheritance "IdentReference" "Factor";
13 Inheritance "Number" "Factor";
14 Inheritance "ExpressionFactor" "Factor";
15 Connection AGGREGATION "block" "Program" "Block";
16 Connection AGGREGATION "variables" "Block" "VarDeclaration";
17 Connection AGGREGATION "constants" "Block" "ConstDeclaration";
18 Connection AGGREGATION "procedures" "Block" "ProcedureDeclaration";
19 Connection AGGREGATION "body" "Block" "Body";
20 Connection ASSOCIATION "owner" "Block" "BlockOwner";
21 Connection ASSOCIATION "allOwners" "Block" "BlockOwner";
22 Connection AGGREGATION "block" "ProcedureDeclaration" "Block";
23 Connection ASSOCIATION "procedure" "CallStatement" "ProcedureDeclaration";
24 Connection AGGREGATION "condition" "IfStatement" "Condition";
25 Connection AGGREGATION "then" "IfStatement" "Body";
26 Connection AGGREGATION "else" "IfStatement" "Body";
27 Connection AGGREGATION "condition" "WhileStatement" "Condition";
28 Connection AGGREGATION "do" "WhileStatement" "Body";
29 Connection ASSOCIATION "left" "Assignment" "VarDeclaration";
30 Connection AGGREGATION "right" "Assignment" "Expression";
31 Connection AGGREGATION "expression" "OddCondition" "Expression";
32 Connection AGGREGATION "left" "RelationalCondition" "Expression";
33 Connection AGGREGATION "right" "RelationalCondition" "Expression";
34 Connection AGGREGATION "obligatory" "TermExpression" "Term";
35 Connection AGGREGATION "optional" "TermExpression" "OptionalTerm";
36 Connection AGGREGATION "obligatory" "Term" "Factor";
37 Connection AGGREGATION "optional" "Term" "OptionalFactor";
38 Connection AGGREGATION "term" "OptionalTerm" "Term";
39 Connection AGGREGATION "factor" "OptionalFactor" "Factor";
40 Connection ASSOCIATION "ident" "IdentReference" "Declaration";
41 Connection AGGREGATION "expression" "ExpressionFactor" "Expression";
42 Connection AGGREGATION "statements" "Body" "Statement";
43 Connection AGGREGATION "block" "BlockOwner" "Block";
