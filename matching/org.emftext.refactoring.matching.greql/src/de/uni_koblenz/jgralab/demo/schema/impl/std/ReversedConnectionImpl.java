/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.demo.schema.impl.std;

import de.uni_koblenz.jgralab.impl.std.ReversedEdgeImpl;
import de.uni_koblenz.jgralab.impl.std.EdgeImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.Graph;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.exception.GraphIOException;

import de.uni_koblenz.jgralab.demo.schema.Node;

import java.io.IOException;

public class ReversedConnectionImpl extends ReversedEdgeImpl implements de.uni_koblenz.jgralab.demo.schema.Connection, de.uni_koblenz.jgralab.Edge {

	ReversedConnectionImpl(EdgeImpl e, Graph g) {
		super(e, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.EdgeClass getAttributedElementClass() {
		return getNormalEdge().getAttributedElementClass();
	}

	public de.uni_koblenz.jgralab.demo.schema.ConnectionType get_connectionType() {
		return ((de.uni_koblenz.jgralab.demo.schema.Connection)normalEdge).get_connectionType();
	}

	public void set_connectionType(de.uni_koblenz.jgralab.demo.schema.ConnectionType _connectionType) {
		((de.uni_koblenz.jgralab.demo.schema.Connection)normalEdge).set_connectionType(_connectionType);
	}

	public java.lang.String get_name() {
		return ((de.uni_koblenz.jgralab.demo.schema.Connection)normalEdge).get_name();
	}

	public void set_name(java.lang.String _name) {
		((de.uni_koblenz.jgralab.demo.schema.Connection)normalEdge).set_name(_name);
	}

	public java.lang.String get_source() {
		return ((de.uni_koblenz.jgralab.demo.schema.Connection)normalEdge).get_source();
	}

	public void set_source(java.lang.String _source) {
		((de.uni_koblenz.jgralab.demo.schema.Connection)normalEdge).set_source(_source);
	}

	public java.lang.String get_target() {
		return ((de.uni_koblenz.jgralab.demo.schema.Connection)normalEdge).get_target();
	}

	public void set_target(java.lang.String _target) {
		((de.uni_koblenz.jgralab.demo.schema.Connection)normalEdge).set_target(_target);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		throw new GraphIOException("Can not call readAttributeValues for reversed Edges.");
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new GraphIOException("Can not call readAttributeValuesFromString for reversed Edges.");
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		throw new GraphIOException("Can not call writeAttributeValues for reversed Edges.");
	}

	public String writeAttributeValueToString(String _attributeName) throws IOException, GraphIOException {
		throw new GraphIOException("Can not call writeAttributeValueToString for reversed Edges.");
	}

	public de.uni_koblenz.jgralab.demo.schema.Connection getNextConnectionInGraph() {
		return ((de.uni_koblenz.jgralab.demo.schema.Connection)normalEdge).getNextConnectionInGraph();
	}

	public de.uni_koblenz.jgralab.demo.schema.Connection getNextConnectionIncidence() {
		return (de.uni_koblenz.jgralab.demo.schema.Connection)getNextIncidence(de.uni_koblenz.jgralab.demo.schema.Connection.EC);
	}

	public de.uni_koblenz.jgralab.demo.schema.Connection getNextConnectionIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.demo.schema.Connection)getNextIncidence(de.uni_koblenz.jgralab.demo.schema.Connection.EC, orientation);
	}
	public Node getAlpha() {
		return (Node) super.getAlpha();
	}
	public Node getOmega() {
		return (Node) super.getOmega();
	}
}
