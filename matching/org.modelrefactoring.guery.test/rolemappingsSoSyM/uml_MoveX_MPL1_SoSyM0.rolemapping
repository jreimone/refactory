"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=collaborationRole:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=collaborationRole:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Collaboration{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterableElement{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterableElement{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterableElement{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterableElement{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecification{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecification{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecification{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecification{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Event{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Event{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Event{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Event{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Event{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Event{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Event{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Event{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=association:Association;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Association{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=association:Association;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Association{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=association:Association;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Association{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=association:Association;sourceContainment:=ownedComment:Comment;};TargetContainer:=Association{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearAssociationAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=generalization:Generalization;};TargetContainer:=StateMachine{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=generalization:Generalization;};TargetContainer:=BehavioredClassifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=region:Region;};TargetContainer:=StateMachine{targetContainment:=region:Region;};Movee:=Region;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=submachineState:State;sourceContainment:=region:Region;};TargetContainer:=State{targetContainment:=region:Region;};Movee:=Region;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=substitution:Substitution;};TargetContainer:=StateMachine{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=substitution:Substitution;};TargetContainer:=BehavioredClassifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=StateMachine{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioralFeature{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=elementImport:ElementImport;};TargetContainer:=StateMachine{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioredClassifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=submachineState:State;sourceContainment:=elementImport:ElementImport;};TargetContainer:=State{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=BehavioredClassifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=StateMachine{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=StateMachine{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=submachineState:State;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=State{targetContainment:=exit:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=submachineState:State;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=State{targetContainment:=doActivity:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=submachineState:State;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=State{targetContainment:=entry:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=StateMachine{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=StateMachine{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=postcondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=precondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedComment:Comment;};TargetContainer:=StateMachine{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=submachineState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=BehavioredClassifier{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=StateMachine{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioralFeature{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StateMachine{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=submachineState:State;sourceContainment:=ownedRule:Constraint;};TargetContainer:=State{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedReception:Reception;};TargetContainer:=StateMachine{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=StateMachine{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StateMachine{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=submachineState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=postcondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=precondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioredClassifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=StateMachine{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedConnector:Connector;};TargetContainer:=StateMachine{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=connectionPoint:Pseudostate;};TargetContainer:=StateMachine{targetContainment:=connectionPoint:Pseudostate;};Movee:=Pseudostate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=submachineState:State;sourceContainment:=connectionPoint:Pseudostate;};TargetContainer:=State{targetContainment:=connectionPoint:Pseudostate;};Movee:=Pseudostate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedAttribute:Property;};TargetContainer:=StateMachine{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedOperation:Operation;};TargetContainer:=StateMachine{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioredClassifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=submachineState:State;sourceContainment:=packageImport:PackageImport;};TargetContainer:=State{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioralFeature{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=packageImport:PackageImport;};TargetContainer:=StateMachine{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=BehavioredClassifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=StateMachine{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolConformance{containerReference:=generalMachine:ProtocolStateMachine;sourceContainment:=ownedComment:Comment;};TargetContainer:=ProtocolStateMachine{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolConformance{containerReference:=specificMachine:ProtocolStateMachine;sourceContainment:=ownedComment:Comment;};TargetContainer:=ProtocolStateMachine{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolConformance{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolConformance{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolConformance{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolConformance{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolConformance{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=StateMachine{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=region:Region;};TargetContainer:=StateMachine{targetContainment:=region:Region;};Movee:=Region;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=submachineState:State;sourceContainment:=region:Region;};TargetContainer:=State{targetContainment:=region:Region;};Movee:=Region;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioralFeature{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StateMachine{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=submachineState:State;sourceContainment:=ownedRule:Constraint;};TargetContainer:=State{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedOperation:Operation;};TargetContainer:=StateMachine{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StateMachine{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=submachineState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=precondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=postcondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioredClassifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedConnector:Connector;};TargetContainer:=StateMachine{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=StateMachine{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioredClassifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=submachineState:State;sourceContainment:=packageImport:PackageImport;};TargetContainer:=State{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioralFeature{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=packageImport:PackageImport;};TargetContainer:=StateMachine{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=BehavioredClassifier{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=StateMachine{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=StateMachine{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=BehavioredClassifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=StateMachine{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=connectionPoint:Pseudostate;};TargetContainer:=StateMachine{targetContainment:=connectionPoint:Pseudostate;};Movee:=Pseudostate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=submachineState:State;sourceContainment:=connectionPoint:Pseudostate;};TargetContainer:=State{targetContainment:=connectionPoint:Pseudostate;};Movee:=Pseudostate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedReception:Reception;};TargetContainer:=StateMachine{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=substitution:Substitution;};TargetContainer:=StateMachine{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=substitution:Substitution;};TargetContainer:=BehavioredClassifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedAttribute:Property;};TargetContainer:=StateMachine{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=precondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=postcondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedComment:Comment;};TargetContainer:=StateMachine{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=submachineState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=StateMachine{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=submachineState:State;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=State{targetContainment:=exit:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=submachineState:State;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=State{targetContainment:=doActivity:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=submachineState:State;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=State{targetContainment:=entry:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=StateMachine{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=BehavioredClassifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=StateMachine{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=generalization:Generalization;};TargetContainer:=StateMachine{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=generalization:Generalization;};TargetContainer:=BehavioredClassifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=StateMachine{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=specification:BehavioralFeature;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioralFeature{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extendedStateMachine:StateMachine;sourceContainment:=elementImport:ElementImport;};TargetContainer:=StateMachine{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=context:BehavioredClassifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioredClassifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=submachineState:State;sourceContainment:=elementImport:ElementImport;};TargetContainer:=State{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolStateMachine{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=client:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=supplier:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=client:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=supplier:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Usage{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ForkNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=start:OccurrenceSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OccurrenceSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=finish:OccurrenceSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OccurrenceSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=start:OccurrenceSpecification;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=OccurrenceSpecification{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=finish:OccurrenceSpecification;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=OccurrenceSpecification{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=start:OccurrenceSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=OccurrenceSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionSpecification{containerReference:=finish:OccurrenceSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=OccurrenceSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutableNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=classifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=enumeration:Enumeration;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Enumeration{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=deployedElement:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=enumeration:Enumeration;sourceContainment:=ownedComment:Comment;};TargetContainer:=Enumeration{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=classifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=deployedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EnumerationLiteral{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=incoming:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=outgoing:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=container:Region;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Region{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=incoming:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=outgoing:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=container:Region;sourceContainment:=ownedComment:Comment;};TargetContainer:=Region{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Vertex{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=parameter:Parameter;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Parameter{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=inState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=inState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=parameter:Parameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=Parameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=parameter:Parameter;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=Parameter{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=parameter:Parameter;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=Parameter{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=parameter:Parameter;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=Parameter{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityParameterNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Type{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Type{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Type{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Type{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Type{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Type{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Type{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Type{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Type{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Type{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationObservation{containerReference:=event:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationObservation{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationObservation{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationObservation{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationObservation{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationObservation{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationObservation{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationObservation{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationObservation{containerReference:=event:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationObservation{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=returnInformation:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=replyValue:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=replyToCall:Trigger;sourceContainment:=ownedComment:Comment;};TargetContainer:=Trigger{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=replyToCall:Trigger;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Trigger{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReplyAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageableElement{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageableElement{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageableElement{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageableElement{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageableElement{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageableElement{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageableElement{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageableElement{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=featuringClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Feature{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentTarget{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentTarget{containerReference:=deployedElement:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentTarget{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentTarget{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentTarget{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentTarget{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentTarget{containerReference:=deployedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentTarget{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=featuringClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeature{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=classifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=classifier:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=classifier:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=classifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadIsClassifiedObjectAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=second:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=first:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TestIdentityAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=superGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=subgroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=node:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=containedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=containedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=interruptingEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=inActivity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=superGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=subgroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=node:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=containedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=inActivity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=containedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=interruptingEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterruptibleActivityRegion{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=structuredNodeOutput:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=activity:Activity;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inActivity:Activity;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=context:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=structuredNodeInput:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=subgroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=superGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=containedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inActivity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=containedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=packageImport:PackageImport;};TargetContainer:=StructuredActivityNode{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=context:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=activity:Activity;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Activity{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inActivity:Activity;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Activity{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inActivity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=activity:Activity;sourceContainment:=node:ActivityNode;};TargetContainer:=Activity{targetContainment:=ownedNode:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inActivity:Activity;sourceContainment:=node:ActivityNode;};TargetContainer:=Activity{targetContainment:=ownedNode:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=node:ActivityNode;};TargetContainer:=StructuredActivityNode{targetContainment:=node:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=edge:ActivityEdge;};TargetContainer:=StructuredActivityNode{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=activity:Activity;sourceContainment:=edge:ActivityEdge;};TargetContainer:=Activity{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inActivity:Activity;sourceContainment:=edge:ActivityEdge;};TargetContainer:=Activity{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=variable:Variable;};TargetContainer:=StructuredActivityNode{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=activity:Activity;sourceContainment:=variable:Variable;};TargetContainer:=Activity{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inActivity:Activity;sourceContainment:=variable:Variable;};TargetContainer:=Activity{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=subgroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=superGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=containedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=containedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inActivity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=activity:Activity;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Activity{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inActivity:Activity;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Activity{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=elementImport:ElementImport;};TargetContainer:=StructuredActivityNode{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=context:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inActivity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConditionalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=joinSpec:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=incoming:ActivityEdge;sourceContainment:=joinSpec:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=joinSpec:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=incoming:ActivityEdge;sourceContainment:=joinSpec:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=JoinNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Relationship{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Relationship{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Relationship{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=realizingClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=supplier:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=client:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=abstraction:Component;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Component{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=supplier:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=client:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=realizingClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=abstraction:Component;sourceContainment:=ownedComment:Comment;};TargetContainer:=Component{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ComponentRealization{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateableElement{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateableElement{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralBoolean{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralBoolean{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralBoolean{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralBoolean{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralBoolean{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralBoolean{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralBoolean{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralBoolean{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralBoolean{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralBoolean{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=inputValue:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkObjectAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Enumeration{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptEventAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=unmarshallType:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=unmarshallType:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=unmarshallType:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=unmarshallType:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UnmarshallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=inState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=inState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CentralBufferNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DirectedRelationship{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DirectedRelationship{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DirectedRelationship{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DirectedRelationship{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DirectedRelationship{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=classifier:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=classifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=classifier:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=classifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateObjectAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=sendEvent:MessageEnd;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=MessageEnd{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=receiveEvent:MessageEnd;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=MessageEnd{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=signature:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=connector:Connector;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Connector{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=interaction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=signature:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=sendEvent:MessageEnd;sourceContainment:=ownedComment:Comment;};TargetContainer:=MessageEnd{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=receiveEvent:MessageEnd;sourceContainment:=ownedComment:Comment;};TargetContainer:=MessageEnd{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=interaction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Message{containerReference:=connector:Connector;sourceContainment:=ownedComment:Comment;};TargetContainer:=Connector{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InitialNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inActivity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=packageImport:PackageImport;};TargetContainer:=StructuredActivityNode{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=context:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=activity:Activity;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Activity{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inActivity:Activity;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Activity{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=structuredNodeInput:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=activity:Activity;sourceContainment:=node:ActivityNode;};TargetContainer:=Activity{targetContainment:=ownedNode:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inActivity:Activity;sourceContainment:=node:ActivityNode;};TargetContainer:=Activity{targetContainment:=ownedNode:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=node:ActivityNode;};TargetContainer:=StructuredActivityNode{targetContainment:=node:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=edge:ActivityEdge;};TargetContainer:=StructuredActivityNode{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=activity:Activity;sourceContainment:=edge:ActivityEdge;};TargetContainer:=Activity{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inActivity:Activity;sourceContainment:=edge:ActivityEdge;};TargetContainer:=Activity{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=variable:Variable;};TargetContainer:=StructuredActivityNode{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=activity:Activity;sourceContainment:=variable:Variable;};TargetContainer:=Activity{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inActivity:Activity;sourceContainment:=variable:Variable;};TargetContainer:=Activity{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inActivity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=superGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=subgroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=containedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=containedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inActivity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=structuredNodeOutput:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=superGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=subgroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=containedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inActivity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=containedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=activity:Activity;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Activity{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inActivity:Activity;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Activity{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=elementImport:ElementImport;};TargetContainer:=StructuredActivityNode{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=context:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=activity:Activity;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inActivity:Activity;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=context:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SequenceNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeployedArtifact{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeployedArtifact{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeployedArtifact{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeployedArtifact{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeployedArtifact{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeployedArtifact{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredClassifier{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=inState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=inState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionInputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=min:ValueSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ValueSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=max:ValueSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ValueSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=min:ValueSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=ValueSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=max:ValueSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=ValueSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationInterval{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=exception:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RaiseExceptionAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=insertAt:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=value:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=onPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=argument:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=onPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartObjectBehaviorAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=target:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=onPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=argument:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=onPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=request:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CollaborationUse{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CollaborationUse{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CollaborationUse{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CollaborationUse{containerReference:=type:Collaboration;sourceContainment:=ownedComment:Comment;};TargetContainer:=Collaboration{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CollaborationUse{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CollaborationUse{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CollaborationUse{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CollaborationUse{containerReference:=type:Collaboration;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Collaboration{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=outputValue:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=inputValue:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=deployedElement:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=attribute:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=part:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=ownedPort:Port;sourceContainment:=deployment:Deployment;};TargetContainer:=Port{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=deployedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionEnvironment{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=featuringClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=signal:Signal;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Signal{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=method:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=featuringClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=method:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=raisedException:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=signal:Signal;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Signal{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=signal:Signal;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Signal{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=method:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=featuringClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=method:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=method:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=signal:Signal;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Signal{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=signal:Signal;sourceContainment:=ownedComment:Comment;};TargetContainer:=Signal{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=method:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=raisedException:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Reception{containerReference:=method:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralOrdering{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralOrdering{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralOrdering{containerReference:=before:OccurrenceSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OccurrenceSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralOrdering{containerReference:=after:OccurrenceSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OccurrenceSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralOrdering{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralOrdering{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralOrdering{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralOrdering{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralOrdering{containerReference:=before:OccurrenceSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=OccurrenceSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralOrdering{containerReference:=after:OccurrenceSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=OccurrenceSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEnd{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEnd{containerReference:=message:Message;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Message{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEnd{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEnd{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEnd{containerReference:=message:Message;sourceContainment:=ownedComment:Comment;};TargetContainer:=Message{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEnd{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEnd{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEnd{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=toBefore:GeneralOrdering;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralOrdering{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=toAfter:GeneralOrdering;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralOrdering{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=message:Message;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Message{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=toBefore:GeneralOrdering;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralOrdering{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=toAfter:GeneralOrdering;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralOrdering{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=message:Message;sourceContainment:=ownedComment:Comment;};TargetContainer:=Message{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageOccurrenceSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=toBefore:GeneralOrdering;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralOrdering{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=toAfter:GeneralOrdering;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralOrdering{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=toBefore:GeneralOrdering;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralOrdering{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=toAfter:GeneralOrdering;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralOrdering{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralInteger{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralInteger{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralInteger{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralInteger{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralInteger{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralInteger{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralInteger{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralInteger{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralInteger{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralInteger{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Class{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=activity:Activity;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inActivity:Activity;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=context:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=structuredNodeInput:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=variable:Variable;};TargetContainer:=StructuredActivityNode{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=activity:Activity;sourceContainment:=variable:Variable;};TargetContainer:=Activity{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inActivity:Activity;sourceContainment:=variable:Variable;};TargetContainer:=Activity{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=structuredNodeOutput:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=subgroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=superGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=containedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inActivity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=containedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inputElement:ExpansionNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExpansionNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=outputElement:ExpansionNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExpansionNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=activity:Activity;sourceContainment:=node:ActivityNode;};TargetContainer:=Activity{targetContainment:=ownedNode:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inActivity:Activity;sourceContainment:=node:ActivityNode;};TargetContainer:=Activity{targetContainment:=ownedNode:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=node:ActivityNode;};TargetContainer:=StructuredActivityNode{targetContainment:=node:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=activity:Activity;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Activity{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inActivity:Activity;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Activity{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=elementImport:ElementImport;};TargetContainer:=StructuredActivityNode{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=context:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inActivity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=packageImport:PackageImport;};TargetContainer:=StructuredActivityNode{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=context:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=activity:Activity;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Activity{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inActivity:Activity;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Activity{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inActivity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=edge:ActivityEdge;};TargetContainer:=StructuredActivityNode{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=activity:Activity;sourceContainment:=edge:ActivityEdge;};TargetContainer:=Activity{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inActivity:Activity;sourceContainment:=edge:ActivityEdge;};TargetContainer:=Activity{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=subgroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=superGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=containedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inputElement:ExpansionNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ExpansionNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=outputElement:ExpansionNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ExpansionNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=containedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionRegion{containerReference:=inActivity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=NamedElement{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=NamedElement{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=NamedElement{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=NamedElement{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=NamedElement{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=NamedElement{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=start:OccurrenceSpecification;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=OccurrenceSpecification{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=finish:OccurrenceSpecification;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=OccurrenceSpecification{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=action:Action;sourceContainment:=ownedComment:Comment;};TargetContainer:=Action{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=start:OccurrenceSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=OccurrenceSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=finish:OccurrenceSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=OccurrenceSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=action:Action;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Action{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=start:OccurrenceSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OccurrenceSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActionExecutionSpecification{containerReference:=finish:OccurrenceSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OccurrenceSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=min:ValueSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ValueSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=max:ValueSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ValueSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=min:ValueSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=ValueSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=max:ValueSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=ValueSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeInterval{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=variable:Variable;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Variable{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=value:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=removeAt:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=variable:Variable;sourceContainment:=ownedComment:Comment;};TargetContainer:=Variable{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Comment{containerReference:=annotatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Comment{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Comment{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=weight:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=weight:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=target:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=source:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=interrupts:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=guard:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=guard:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=target:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=source:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=interrupts:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityEdge{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Clause{containerReference:=successorClause:Clause;sourceContainment:=ownedComment:Comment;};TargetContainer:=Clause{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Clause{containerReference:=predecessorClause:Clause;sourceContainment:=ownedComment:Comment;};TargetContainer:=Clause{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Clause{containerReference:=body:ExecutableNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExecutableNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Clause{containerReference:=test:ExecutableNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExecutableNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Clause{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Clause{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Clause{containerReference:=decider:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Clause{containerReference:=bodyOutput:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interface{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=ownedReception:Reception;};TargetContainer:=Interface{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Interface{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Interface{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Interface{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Interface{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interface{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Interface{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=protocol:ProtocolStateMachine;};TargetContainer:=Interface{targetContainment:=protocol:ProtocolStateMachine;};Movee:=ProtocolStateMachine;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Interface{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Interface{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Interface{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Interface{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Interface{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=generalization:Generalization;};TargetContainer:=Interface{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interface{containerReference:=redefinedInterface:Interface;sourceContainment:=substitution:Substitution;};TargetContainer:=Interface{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=reducer:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=reducer:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=reducer:Behavior;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=reducer:Behavior;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReduceAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=collection:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=bodyPart:ExecutableNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=ExecutableNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=test:ExecutableNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=ExecutableNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=setupPart:ExecutableNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=ExecutableNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=bodyPart:ExecutableNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExecutableNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=test:ExecutableNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExecutableNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=setupPart:ExecutableNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExecutableNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=subgroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=superGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=containedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inActivity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=containedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=decider:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=bodyOutput:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inActivity:Activity;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Activity{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=activity:Activity;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Activity{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=elementImport:ElementImport;};TargetContainer:=StructuredActivityNode{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=context:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inActivity:Activity;sourceContainment:=node:ActivityNode;};TargetContainer:=Activity{targetContainment:=ownedNode:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=activity:Activity;sourceContainment:=node:ActivityNode;};TargetContainer:=Activity{targetContainment:=ownedNode:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=node:ActivityNode;};TargetContainer:=StructuredActivityNode{targetContainment:=node:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=loopVariable:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=variable:Variable;};TargetContainer:=StructuredActivityNode{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inActivity:Activity;sourceContainment:=variable:Variable;};TargetContainer:=Activity{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=activity:Activity;sourceContainment:=variable:Variable;};TargetContainer:=Activity{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=packageImport:PackageImport;};TargetContainer:=StructuredActivityNode{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=context:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inActivity:Activity;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Activity{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=activity:Activity;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Activity{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inActivity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inActivity:Activity;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=activity:Activity;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=context:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=edge:ActivityEdge;};TargetContainer:=StructuredActivityNode{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inActivity:Activity;sourceContainment:=edge:ActivityEdge;};TargetContainer:=Activity{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=activity:Activity;sourceContainment:=edge:ActivityEdge;};TargetContainer:=Activity{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=bodyPart:ExecutableNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ExecutableNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=test:ExecutableNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ExecutableNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=setupPart:ExecutableNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ExecutableNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=subgroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=superGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=containedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=containedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=decider:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=bodyOutput:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inActivity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=structuredNodeOutput:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=loopVariableInput:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inActivity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LoopNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=structuredNodeInput:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Interaction{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=message:Message;};TargetContainer:=Interaction{targetContainment:=message:Message;};Movee:=Message;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=BehavioredClassifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Interaction{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=specification:BehavioralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=precondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=postcondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioredClassifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Interaction{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=BehavioredClassifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Interaction{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Interaction{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=substitution:Substitution;};TargetContainer:=BehavioredClassifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=substitution:Substitution;};TargetContainer:=Interaction{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Interaction{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedReception:Reception;};TargetContainer:=Interaction{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=BehavioredClassifier{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Interaction{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=action:Action;};TargetContainer:=Interaction{targetContainment:=action:Action;};Movee:=Action;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=formalGate:Gate;};TargetContainer:=Interaction{targetContainment:=formalGate:Gate;};Movee:=Gate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Interaction{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Interaction{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Interaction{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=generalization:Generalization;};TargetContainer:=BehavioredClassifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalization:Generalization;};TargetContainer:=Interaction{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioredClassifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=specification:BehavioralFeature;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioralFeature{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Interaction{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=packageImport:PackageImport;};TargetContainer:=InteractionOperand{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=lifeline:Lifeline;};TargetContainer:=Interaction{targetContainment:=lifeline:Lifeline;};Movee:=Lifeline;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Interaction{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=precondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=postcondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioralFeature{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedRule:Constraint;};TargetContainer:=InteractionOperand{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Interaction{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Interaction{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=specification:BehavioralFeature;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioralFeature{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=context:BehavioredClassifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioredClassifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=elementImport:ElementImport;};TargetContainer:=InteractionOperand{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Interaction{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=fragment:InteractionFragment;};TargetContainer:=InteractionOperand{targetContainment:=fragment:InteractionFragment;};Movee:=InteractionFragment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interaction{containerReference:=enclosingInteraction:Interaction;sourceContainment:=fragment:InteractionFragment;};TargetContainer:=Interaction{targetContainment:=fragment:InteractionFragment;};Movee:=InteractionFragment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndData{containerReference:=end:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndData{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndData{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndData{containerReference:=value:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Expression{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Expression{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Expression{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Expression{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Expression{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Expression{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Expression{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Expression{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Expression{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Expression{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=incoming:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=outgoing:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=stateMachine:StateMachine;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StateMachine{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=container:Region;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Region{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=state:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=incoming:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=outgoing:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=stateMachine:StateMachine;sourceContainment:=ownedComment:Comment;};TargetContainer:=StateMachine{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=container:Region;sourceContainment:=ownedComment:Comment;};TargetContainer:=Region{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=state:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pseudostate{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CombinedFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=cfragmentGate:Gate;};TargetContainer:=Interaction{targetContainment:=formalGate:Gate;};Movee:=Gate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=behavior:Behavior;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=behavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=onPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=argument:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=onPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=behavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=behavior:Behavior;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AnyReceiveEvent{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AnyReceiveEvent{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AnyReceiveEvent{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AnyReceiveEvent{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AnyReceiveEvent{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AnyReceiveEvent{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AnyReceiveEvent{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AnyReceiveEvent{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioredClassifier{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallEvent{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallEvent{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallEvent{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallEvent{containerReference:=operation:Operation;sourceContainment:=ownedComment:Comment;};TargetContainer:=Operation{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallEvent{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallEvent{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallEvent{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallEvent{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallEvent{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallEvent{containerReference:=operation:Operation;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Operation{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameter{containerReference:=signature:TemplateSignature;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateSignature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameter{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameter{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameter{containerReference:=parameteredElement:ParameterableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ParameterableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameter{containerReference:=default:ParameterableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ParameterableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=include:Include;};TargetContainer:=UseCase{targetContainment:=include:Include;};Movee:=Include;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=extend:Extend;};TargetContainer:=UseCase{targetContainment:=extend:Extend;};Movee:=Extend;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=extensionPoint:ExtensionPoint;};TargetContainer:=UseCase{targetContainment:=extensionPoint:ExtensionPoint;};Movee:=ExtensionPoint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=subject:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=UseCase{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableElement{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableElement{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableElement{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableElement{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableElement{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableElement{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableElement{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableElement{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableElement{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableElement{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=inState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=inState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=outgoing:ActivityEdge;sourceContainment:=value:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=incoming:ActivityEdge;sourceContainment:=value:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=outgoing:ActivityEdge;sourceContainment:=value:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=incoming:ActivityEdge;sourceContainment:=value:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=outgoing:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=incoming:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=outgoing:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=incoming:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValuePin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=oldClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=newClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=oldClassifier:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=newClassifier:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=oldClassifier:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=newClassifier:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=oldClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=newClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReclassifyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateBinding{containerReference:=signature:TemplateSignature;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateSignature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateBinding{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateBinding{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateBinding{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateBinding{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateBinding{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateBinding{containerReference:=boundElement:TemplateableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=postcondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=precondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioredClassifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=BehavioredClassifier{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=generalization:Generalization;};TargetContainer:=BehavioredClassifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioralFeature{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioredClassifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=BehavioredClassifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioredClassifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioralFeature{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=BehavioredClassifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=substitution:Substitution;};TargetContainer:=BehavioredClassifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioralFeature{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=postcondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=precondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueBehavior{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndCreationData{containerReference:=end:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndCreationData{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndCreationData{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndCreationData{containerReference:=value:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndCreationData{containerReference:=insertAt:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=inputValue:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=EncapsulatedClassifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=namespace:Namespace;sourceContainment:=invariant:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=invariant:Constraint;};TargetContainer:=InteractionOperand{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StateInvariant{containerReference:=enclosingInteraction:Interaction;sourceContainment:=invariant:Constraint;};TargetContainer:=Interaction{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Element{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Element{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=outgoing:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=incoming:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=submachine:StateMachine;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StateMachine{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=container:Region;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Region{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=stateInvariant:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=outgoing:Transition;sourceContainment:=deferrableTrigger:Trigger;};TargetContainer:=Transition{targetContainment:=trigger:Trigger;};Movee:=Trigger;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=incoming:Transition;sourceContainment:=deferrableTrigger:Trigger;};TargetContainer:=Transition{targetContainment:=trigger:Trigger;};Movee:=Trigger;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=deferrableTrigger:Trigger;};TargetContainer:=State{targetContainment:=deferrableTrigger:Trigger;};Movee:=Trigger;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=connection:ConnectionPointReference;};TargetContainer:=State{targetContainment:=connection:ConnectionPointReference;};Movee:=ConnectionPointReference;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=submachine:StateMachine;sourceContainment:=doActivity:Behavior;};TargetContainer:=StateMachine{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=doActivity:Behavior;};TargetContainer:=State{targetContainment:=exit:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=doActivity:Behavior;};TargetContainer:=State{targetContainment:=doActivity:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=doActivity:Behavior;};TargetContainer:=State{targetContainment:=entry:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=outgoing:Transition;sourceContainment:=doActivity:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=incoming:Transition;sourceContainment:=doActivity:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=submachine:StateMachine;sourceContainment:=elementImport:ElementImport;};TargetContainer:=StateMachine{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=outgoing:Transition;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Transition{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=incoming:Transition;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Transition{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=elementImport:ElementImport;};TargetContainer:=State{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=container:Region;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Region{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=submachine:StateMachine;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StateMachine{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=outgoing:Transition;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Transition{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=incoming:Transition;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Transition{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=ownedRule:Constraint;};TargetContainer:=State{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=container:Region;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Region{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=submachine:StateMachine;sourceContainment:=region:Region;};TargetContainer:=StateMachine{targetContainment:=region:Region;};Movee:=Region;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=region:Region;};TargetContainer:=State{targetContainment:=region:Region;};Movee:=Region;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=submachine:StateMachine;sourceContainment:=entry:Behavior;};TargetContainer:=StateMachine{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=entry:Behavior;};TargetContainer:=State{targetContainment:=exit:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=entry:Behavior;};TargetContainer:=State{targetContainment:=doActivity:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=entry:Behavior;};TargetContainer:=State{targetContainment:=entry:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=outgoing:Transition;sourceContainment:=entry:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=incoming:Transition;sourceContainment:=entry:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=submachine:StateMachine;sourceContainment:=exit:Behavior;};TargetContainer:=StateMachine{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=exit:Behavior;};TargetContainer:=State{targetContainment:=exit:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=exit:Behavior;};TargetContainer:=State{targetContainment:=doActivity:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=exit:Behavior;};TargetContainer:=State{targetContainment:=entry:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=outgoing:Transition;sourceContainment:=exit:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=incoming:Transition;sourceContainment:=exit:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=container:Region;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Region{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=outgoing:Transition;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Transition{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=incoming:Transition;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Transition{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=packageImport:PackageImport;};TargetContainer:=State{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=submachine:StateMachine;sourceContainment:=packageImport:PackageImport;};TargetContainer:=StateMachine{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=outgoing:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=incoming:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=stateInvariant:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=submachine:StateMachine;sourceContainment:=ownedComment:Comment;};TargetContainer:=StateMachine{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=container:Region;sourceContainment:=ownedComment:Comment;};TargetContainer:=Region{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=submachine:StateMachine;sourceContainment:=connectionPoint:Pseudostate;};TargetContainer:=StateMachine{targetContainment:=connectionPoint:Pseudostate;};Movee:=Pseudostate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalState{containerReference:=redefinedState:State;sourceContainment:=connectionPoint:Pseudostate;};TargetContainer:=State{targetContainment:=connectionPoint:Pseudostate;};Movee:=Pseudostate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=subgroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=superGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=node:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=containedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=represents:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=inActivity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=edge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=containedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=superPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=subgroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=superGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=node:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=containedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=superPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=edge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=containedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=inActivity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityPartition{containerReference:=superPartition:ActivityPartition;sourceContainment:=subpartition:ActivityPartition;};TargetContainer:=ActivityPartition{targetContainment:=subpartition:ActivityPartition;};Movee:=ActivityPartition;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Gate{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Gate{containerReference:=message:Message;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Message{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Gate{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Gate{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Gate{containerReference:=message:Message;sourceContainment:=ownedComment:Comment;};TargetContainer:=Message{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Gate{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Gate{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Gate{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=represented:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationItem{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=value:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=insertAt:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=variable:Variable;sourceContainment:=ownedComment:Comment;};TargetContainer:=Variable{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=variable:Variable;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Variable{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AddVariableValueAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=inState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=inState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OutputPin{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=end:ConnectorEnd;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=end:ConnectorEnd;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=scope:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=activityScope:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=end:ConnectorEnd;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=end:ConnectorEnd;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=end:ConnectorEnd;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectorEnd{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=scope:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=activityScope:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Variable{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=max:ValueSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=ValueSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=min:ValueSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=ValueSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=max:ValueSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ValueSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Interval{containerReference:=min:ValueSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ValueSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=end:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=end:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Artifact{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SignalEvent{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SignalEvent{containerReference:=signal:Signal;sourceContainment:=ownedComment:Comment;};TargetContainer:=Signal{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SignalEvent{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SignalEvent{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SignalEvent{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SignalEvent{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SignalEvent{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SignalEvent{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SignalEvent{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SignalEvent{containerReference:=signal:Signal;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Signal{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralUnlimitedNatural{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralUnlimitedNatural{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralUnlimitedNatural{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralUnlimitedNatural{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralUnlimitedNatural{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralUnlimitedNatural{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralUnlimitedNatural{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralUnlimitedNatural{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralUnlimitedNatural{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralUnlimitedNatural{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionFragment{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralReal{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralReal{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralReal{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralReal{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralReal{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralReal{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralReal{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralReal{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralReal{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralReal{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralNull{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralNull{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralNull{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralNull{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralNull{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralNull{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralNull{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralNull{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralNull{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralNull{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageImport{containerReference:=importedPackage:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageImport{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageImport{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageImport{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageImport{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageImport{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageImport{containerReference:=importingNamespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=toBefore:GeneralOrdering;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralOrdering{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=toAfter:GeneralOrdering;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralOrdering{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=execution:ExecutionSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ExecutionSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=execution:ExecutionSpecification;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=ExecutionSpecification{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=toBefore:GeneralOrdering;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralOrdering{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=toAfter:GeneralOrdering;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralOrdering{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=execution:ExecutionSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExecutionSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExecutionOccurrenceSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=constrainedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=context:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=context:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DurationConstraint{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=memberEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=navigableOwnedEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=endType:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=endType:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=memberEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=navigableOwnedEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=metaclass:Class;sourceContainment:=ownedEnd:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=memberEnd:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=navigableOwnedEnd:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extension{containerReference:=attribute:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataType{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralString{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralString{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralString{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralString{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralString{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralString{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralString{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralString{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralString{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralString{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=inState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=inState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedEnd:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=ownedPort:Port;sourceContainment:=ownedEnd:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=ownedEnd:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=ownedEnd:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=memberEnd:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=navigableOwnedEnd:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=attribute:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=part:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=memberEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=navigableOwnedEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=endType:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=memberEnd:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=navigableOwnedEnd:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=endType:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=memberEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=navigableOwnedEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AssociationClass{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=inputValue:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TypedElement{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TypedElement{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TypedElement{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TypedElement{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TypedElement{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TypedElement{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TypedElement{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TypedElement{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=observation:Observation;sourceContainment:=ownedComment:Comment;};TargetContainer:=Observation{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeExpression{containerReference:=observation:Observation;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Observation{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Trigger{containerReference:=event:Event;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Event{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Trigger{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Trigger{containerReference:=port:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Trigger{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Trigger{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Trigger{containerReference:=event:Event;sourceContainment:=ownedComment:Comment;};TargetContainer:=Event{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Trigger{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Trigger{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Trigger{containerReference:=port:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Trigger{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=returnValueRecipient:Property;sourceContainment:=returnValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=returnValueRecipient:Property;sourceContainment:=returnValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=returnValueRecipient:Property;sourceContainment:=returnValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=covered:Lifeline;sourceContainment:=returnValue:ValueSpecification;};TargetContainer:=Lifeline{targetContainment:=selector:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=returnValueRecipient:Property;sourceContainment:=argument:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=returnValueRecipient:Property;sourceContainment:=argument:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=returnValueRecipient:Property;sourceContainment:=argument:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=covered:Lifeline;sourceContainment:=argument:ValueSpecification;};TargetContainer:=Lifeline{targetContainment:=selector:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=enclosingInteraction:Interaction;sourceContainment:=actualGate:Gate;};TargetContainer:=Interaction{targetContainment:=formalGate:Gate;};Movee:=Gate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=refersTo:Interaction;sourceContainment:=actualGate:Gate;};TargetContainer:=Interaction{targetContainment:=formalGate:Gate;};Movee:=Gate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=refersTo:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=returnValueRecipient:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=refersTo:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=returnValueRecipient:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=refersTo:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionUse{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityFinalNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FlowFinalNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=conveyed:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=informationSource:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=informationTarget:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=realizingMessage:Message;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Message{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=realizingConnector:Connector;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Connector{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=realizingActivityEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=informationSource:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=informationTarget:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=conveyed:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=realizingMessage:Message;sourceContainment:=ownedComment:Comment;};TargetContainer:=Message{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=realization:Relationship;sourceContainment:=ownedComment:Comment;};TargetContainer:=Relationship{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=realizingActivityEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InformationFlow{containerReference:=realizingConnector:Connector;sourceContainment:=ownedComment:Comment;};TargetContainer:=Connector{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Image{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Image{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=classifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=extendedSignature:RedefinableTemplateSignature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableTemplateSignature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=classifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=extendedSignature:RedefinableTemplateSignature;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableTemplateSignature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=template:TemplateableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=inheritedParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=parameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RedefinableTemplateSignature{containerReference:=extendedSignature:RedefinableTemplateSignature;sourceContainment:=ownedParameter:TemplateParameter;};TargetContainer:=RedefinableTemplateSignature{targetContainment:=ownedParameter:TemplateParameter;};Movee:=TemplateParameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=redefinedConnector:Connector;sourceContainment:=end:ConnectorEnd;};TargetContainer:=Connector{targetContainment:=end:ConnectorEnd;};Movee:=ConnectorEnd;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=featuringClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=contract:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=redefinedConnector:Connector;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Connector{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=type:Association;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Association{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=type:Association;sourceContainment:=ownedComment:Comment;};TargetContainer:=Association{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=contract:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Connector{containerReference:=redefinedConnector:Connector;sourceContainment:=ownedComment:Comment;};TargetContainer:=Connector{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=context:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=constrainedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=context:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=IntervalConstraint{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Actor{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=onPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=argument:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=onPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InvocationAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=target:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestroyObjectAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=profile:Profile;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Profile{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=profile:Profile;sourceContainment:=ownedComment:Comment;};TargetContainer:=Profile{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=profile:Profile;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Profile{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=profile:Profile;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Profile{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=profile:Profile;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Profile{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=profile:Profile;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Profile{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=profile:Profile;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Profile{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Stereotype{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=cfragmentGate:Gate;};TargetContainer:=Interaction{targetContainment:=formalGate:Gate;};Movee:=Gate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=message:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=message:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConsiderIgnoreFragment{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioralFeature{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=BehavioredClassifier{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=BehavioredClassifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=generalization:Generalization;};TargetContainer:=BehavioredClassifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=postcondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=precondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=BehavioredClassifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=specification:BehavioralFeature;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioralFeature{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioredClassifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=substitution:Substitution;};TargetContainer:=BehavioredClassifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=specification:BehavioralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=postcondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=precondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioredClassifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=context:BehavioredClassifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioredClassifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=specification:BehavioralFeature;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioralFeature{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Behavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=inState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=inState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InputPin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingInteraction:Interaction;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Interaction{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=packageImport:PackageImport;};TargetContainer:=InteractionOperand{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedRule:Constraint;};TargetContainer:=InteractionOperand{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Interaction{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=elementImport:ElementImport;};TargetContainer:=InteractionOperand{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingInteraction:Interaction;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Interaction{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=guard:InteractionConstraint;};TargetContainer:=InteractionOperand{targetContainment:=guard:InteractionConstraint;};Movee:=InteractionConstraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=fragment:InteractionFragment;};TargetContainer:=InteractionOperand{targetContainment:=fragment:InteractionFragment;};Movee:=InteractionFragment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingInteraction:Interaction;sourceContainment:=fragment:InteractionFragment;};TargetContainer:=Interaction{targetContainment:=fragment:InteractionFragment;};Movee:=InteractionFragment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionOperand{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=coveredBy:InteractionFragment;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionFragment{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=decomposedAs:PartDecomposition;sourceContainment:=ownedComment:Comment;};TargetContainer:=PartDecomposition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=represents:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=interaction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=decomposedAs:PartDecomposition;sourceContainment:=selector:ValueSpecification;};TargetContainer:=PartDecomposition{targetContainment:=argument:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=decomposedAs:PartDecomposition;sourceContainment:=selector:ValueSpecification;};TargetContainer:=PartDecomposition{targetContainment:=returnValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=coveredBy:InteractionFragment;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionFragment{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=represents:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=decomposedAs:PartDecomposition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PartDecomposition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Lifeline{containerReference:=interaction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ChangeEvent{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ChangeEvent{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ChangeEvent{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ChangeEvent{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ChangeEvent{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ChangeEvent{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ChangeEvent{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ChangeEvent{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinedTransition:Transition;sourceContainment:=effect:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=target:Vertex;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Vertex{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=source:Vertex;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Vertex{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinedTransition:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=container:Region;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Region{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=referred:Operation;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Operation{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=guard:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=postCondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=preCondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinedTransition:Transition;sourceContainment:=trigger:Trigger;};TargetContainer:=Transition{targetContainment:=trigger:Trigger;};Movee:=Trigger;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=referred:Operation;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Operation{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinedTransition:Transition;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Transition{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=container:Region;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Region{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=container:Region;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Region{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinedTransition:Transition;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Transition{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=referred:Operation;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Operation{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinedTransition:Transition;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Transition{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=container:Region;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Region{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=referred:Operation;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Operation{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinedTransition:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=target:Vertex;sourceContainment:=ownedComment:Comment;};TargetContainer:=Vertex{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=source:Vertex;sourceContainment:=ownedComment:Comment;};TargetContainer:=Vertex{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=guard:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=postCondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=preCondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=container:Region;sourceContainment:=ownedComment:Comment;};TargetContainer:=Region{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=referred:Operation;sourceContainment:=ownedComment:Comment;};TargetContainer:=Operation{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProtocolTransition{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=attribute:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=memberEnd:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=navigableOwnedEnd:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=endType:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=memberEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=navigableOwnedEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=memberEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=navigableOwnedEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=endType:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CommunicationPath{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Classifier{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedStereotype:Stereotype;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Stereotype{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestingPackage:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestedPackage:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestingPackage:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestedPackage:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedStereotype:Stereotype;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Stereotype{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedType:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedStereotype:Stereotype;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Stereotype{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestingPackage:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestedPackage:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedStereotype:Stereotype;sourceContainment:=ownedComment:Comment;};TargetContainer:=Stereotype{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestingPackage:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestedPackage:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedType:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedStereotype:Stereotype;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Stereotype{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestingPackage:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestedPackage:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestingPackage:Package;sourceContainment:=packageMerge:PackageMerge;};TargetContainer:=Package{targetContainment:=packageMerge:PackageMerge;};Movee:=PackageMerge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestedPackage:Package;sourceContainment:=packageMerge:PackageMerge;};TargetContainer:=Package{targetContainment:=packageMerge:PackageMerge;};Movee:=PackageMerge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestingPackage:Package;sourceContainment:=profileApplication:ProfileApplication;};TargetContainer:=Package{targetContainment:=profileApplication:ProfileApplication;};Movee:=ProfileApplication;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestedPackage:Package;sourceContainment:=profileApplication:ProfileApplication;};TargetContainer:=Package{targetContainment:=profileApplication:ProfileApplication;};Movee:=ProfileApplication;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestingPackage:Package;sourceContainment:=packagedElement:PackageableElement;};TargetContainer:=Package{targetContainment:=packagedElement:PackageableElement;};Movee:=PackageableElement;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestedPackage:Package;sourceContainment:=packagedElement:PackageableElement;};TargetContainer:=Package{targetContainment:=packagedElement:PackageableElement;};Movee:=PackageableElement;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedStereotype:Stereotype;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Stereotype{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestingPackage:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestedPackage:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestingPackage:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=nestedPackage:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Package{containerReference:=ownedStereotype:Stereotype;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Stereotype{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedStereotype:Stereotype;sourceContainment:=ownedComment:Comment;};TargetContainer:=Stereotype{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestedPackage:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestingPackage:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedType:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestedPackage:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestingPackage:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedStereotype:Stereotype;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Stereotype{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedStereotype:Stereotype;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Stereotype{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestedPackage:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestingPackage:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestedPackage:Package;sourceContainment:=packagedElement:PackageableElement;};TargetContainer:=Package{targetContainment:=packagedElement:PackageableElement;};Movee:=PackageableElement;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestingPackage:Package;sourceContainment:=packagedElement:PackageableElement;};TargetContainer:=Package{targetContainment:=packagedElement:PackageableElement;};Movee:=PackageableElement;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedStereotype:Stereotype;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Stereotype{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestedPackage:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestingPackage:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedStereotype:Stereotype;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Stereotype{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestedPackage:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestingPackage:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedStereotype:Stereotype;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Stereotype{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestedPackage:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestingPackage:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestedPackage:Package;sourceContainment:=packageMerge:PackageMerge;};TargetContainer:=Package{targetContainment:=packageMerge:PackageMerge;};Movee:=PackageMerge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestingPackage:Package;sourceContainment:=packageMerge:PackageMerge;};TargetContainer:=Package{targetContainment:=packageMerge:PackageMerge;};Movee:=PackageMerge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestedPackage:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestingPackage:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedStereotype:Stereotype;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Stereotype{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=ownedType:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestedPackage:Package;sourceContainment:=profileApplication:ProfileApplication;};TargetContainer:=Package{targetContainment:=profileApplication:ProfileApplication;};Movee:=ProfileApplication;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Model{containerReference:=nestingPackage:Package;sourceContainment:=profileApplication:ProfileApplication;};TargetContainer:=Package{targetContainment:=profileApplication:ProfileApplication;};Movee:=ProfileApplication;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=extensionLocation:ExtensionPoint;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExtensionPoint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=extension:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=extendedCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=extensionLocation:ExtensionPoint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ExtensionPoint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=extension:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=extendedCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=extension:UseCase;sourceContainment:=condition:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=extendedCase:UseCase;sourceContainment:=condition:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Extend{containerReference:=namespace:Namespace;sourceContainment:=condition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OperationTemplateParameter{containerReference:=signature:TemplateSignature;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateSignature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OperationTemplateParameter{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OperationTemplateParameter{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OperationTemplateParameter{containerReference:=default:ParameterableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ParameterableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OperationTemplateParameter{containerReference:=parameteredElement:ParameterableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ParameterableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=guard:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=guard:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=weight:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=weight:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=source:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=target:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=transformation:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=interrupts:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=transformation:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=source:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=target:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=interrupts:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ObjectFlow{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PrimitiveType{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameterSubstitution{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameterSubstitution{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameterSubstitution{containerReference:=templateBinding:TemplateBinding;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateBinding{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameterSubstitution{containerReference:=actual:ParameterableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ParameterableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameterSubstitution{containerReference:=formal:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameterSubstitution{containerReference:=formal:TemplateParameter;sourceContainment:=ownedActual:ParameterableElement;};TargetContainer:=TemplateParameter{targetContainment:=ownedParameteredElement:ParameterableElement;};Movee:=ParameterableElement;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateParameterSubstitution{containerReference:=formal:TemplateParameter;sourceContainment:=ownedActual:ParameterableElement;};TargetContainer:=TemplateParameter{targetContainment:=ownedDefault:ParameterableElement;};Movee:=ParameterableElement;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=owningExpression:StringExpression;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StringExpression{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=owningExpression:StringExpression;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StringExpression{targetContainment:=subExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=owningExpression:StringExpression;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=StringExpression{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=owningExpression:StringExpression;sourceContainment:=operand:ValueSpecification;};TargetContainer:=StringExpression{targetContainment:=operand:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=owningExpression:StringExpression;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=StringExpression{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=clientDependency:Dependency;sourceContainment:=subExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=type:Type;sourceContainment:=subExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=namespace:Namespace;sourceContainment:=subExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=owningExpression:StringExpression;sourceContainment:=subExpression:StringExpression;};TargetContainer:=StringExpression{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=owningExpression:StringExpression;sourceContainment:=subExpression:StringExpression;};TargetContainer:=StringExpression{targetContainment:=subExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=owningExpression:StringExpression;sourceContainment:=ownedComment:Comment;};TargetContainer:=StringExpression{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StringExpression{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=powertype:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=powertype:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=generalization:Generalization;sourceContainment:=ownedComment:Comment;};TargetContainer:=Generalization{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=GeneralizationSet{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Slot{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Slot{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Slot{containerReference:=definingFeature:StructuralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Slot{containerReference:=owningInstance:InstanceSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=InstanceSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Slot{containerReference:=owningInstance:InstanceSpecification;sourceContainment:=value:ValueSpecification;};TargetContainer:=InstanceSpecification{targetContainment:=specification:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Slot{containerReference:=definingFeature:StructuralFeature;sourceContainment:=value:ValueSpecification;};TargetContainer:=StructuralFeature{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Slot{containerReference:=definingFeature:StructuralFeature;sourceContainment:=value:ValueSpecification;};TargetContainer:=StructuralFeature{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=onPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=signal:Signal;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Signal{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=signal:Signal;sourceContainment:=ownedComment:Comment;};TargetContainer:=Signal{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=onPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=signal:Signal;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Signal{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=argument:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=target:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=signal:Signal;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Signal{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=SendSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FinalNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=onPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=onPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=argument:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=end:ConnectorEnd;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=end:ConnectorEnd;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=parameterSet:ParameterSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ParameterSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=operation:Operation;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Operation{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=parameterSet:ParameterSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=ParameterSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=end:ConnectorEnd;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectorEnd{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=operation:Operation;sourceContainment:=ownedComment:Comment;};TargetContainer:=Operation{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=end:ConnectorEnd;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=end:ConnectorEnd;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=end:ConnectorEnd;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Parameter{containerReference:=end:ConnectorEnd;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MergeNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadSelfAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=deployment:Deployment;sourceContainment:=ownedComment:Comment;};TargetContainer:=Deployment{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=deployment:Deployment;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Deployment{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DeploymentSpecification{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=instance:InstanceSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InstanceSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=instance:InstanceSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=InstanceSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceValue{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=end:ConnectorEnd;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=end:ConnectorEnd;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=end:ConnectorEnd;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=end:ConnectorEnd;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=end:ConnectorEnd;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=end:ConnectorEnd;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=owningAssociation:Association;sourceContainment:=qualifier:Property;};TargetContainer:=Association{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=association:Association;sourceContainment:=qualifier:Property;};TargetContainer:=Association{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=datatype:DataType;sourceContainment:=qualifier:Property;};TargetContainer:=DataType{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=interface:Interface;sourceContainment:=qualifier:Property;};TargetContainer:=Interface{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=class:Class;sourceContainment:=qualifier:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=class:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=owningAssociation:Association;sourceContainment:=ownedComment:Comment;};TargetContainer:=Association{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=association:Association;sourceContainment:=ownedComment:Comment;};TargetContainer:=Association{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=end:ConnectorEnd;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectorEnd{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=deployedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=interface:Interface;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interface{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=datatype:DataType;sourceContainment:=ownedComment:Comment;};TargetContainer:=DataType{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=featuringClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=class:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=deployedElement:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=associationEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=opposite:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=redefinedProperty:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=subsettedProperty:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=interface:Interface;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interface{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=datatype:DataType;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=DataType{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=owningAssociation:Association;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Association{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionEnd{containerReference:=association:Association;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Association{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=inputValue:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CreateLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElementTemplateParameter{containerReference:=signature:TemplateSignature;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateSignature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElementTemplateParameter{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElementTemplateParameter{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElementTemplateParameter{containerReference:=parameteredElement:ParameterableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ParameterableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElementTemplateParameter{containerReference:=default:ParameterableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ParameterableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Generalization{containerReference:=generalizationSet:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Generalization{containerReference:=specific:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Generalization{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Generalization{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Generalization{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Generalization{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Generalization{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Generalization{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Continuation{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=classifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=deployedElement:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=classifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=deployedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InstanceSpecification{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=variable:Variable;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Variable{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=value:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=variable:Variable;sourceContainment:=ownedComment:Comment;};TargetContainer:=Variable{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteVariableAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageMerge{containerReference:=receivingPackage:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageMerge{containerReference:=mergedPackage:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageMerge{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageMerge{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageMerge{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageMerge{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PackageMerge{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=variable:Variable;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Variable{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=variable:Variable;sourceContainment:=ownedComment:Comment;};TargetContainer:=Variable{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=VariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClassifierTemplateParameter{containerReference:=constrainingClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClassifierTemplateParameter{containerReference:=signature:TemplateSignature;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateSignature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClassifierTemplateParameter{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClassifierTemplateParameter{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClassifierTemplateParameter{containerReference:=default:ParameterableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ParameterableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClassifierTemplateParameter{containerReference:=parameteredElement:ParameterableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ParameterableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Signal{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=refersTo:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=returnValueRecipient:Property;sourceContainment:=argument:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=returnValueRecipient:Property;sourceContainment:=argument:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=returnValueRecipient:Property;sourceContainment:=argument:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=covered:Lifeline;sourceContainment:=argument:ValueSpecification;};TargetContainer:=Lifeline{targetContainment:=selector:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=returnValueRecipient:Property;sourceContainment:=returnValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=returnValueRecipient:Property;sourceContainment:=returnValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=returnValueRecipient:Property;sourceContainment:=returnValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=covered:Lifeline;sourceContainment:=returnValue:ValueSpecification;};TargetContainer:=Lifeline{targetContainment:=selector:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=returnValueRecipient:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=refersTo:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=refersTo:Interaction;sourceContainment:=actualGate:Gate;};TargetContainer:=Interaction{targetContainment:=formalGate:Gate;};Movee:=Gate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=enclosingInteraction:Interaction;sourceContainment:=actualGate:Gate;};TargetContainer:=Interaction{targetContainment:=formalGate:Gate;};Movee:=Gate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=returnValueRecipient:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=refersTo:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=PartDecomposition{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndDestructionData{containerReference:=end:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndDestructionData{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndDestructionData{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndDestructionData{containerReference:=destroyAt:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkEndDestructionData{containerReference:=value:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=QualifierValue{containerReference:=qualifier:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=QualifierValue{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=QualifierValue{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=QualifierValue{containerReference:=value:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=subgroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=superGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=containedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=inActivity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=containedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=subgroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=superGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=containedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=containedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ActivityGroup{containerReference:=inActivity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=constrainedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=context:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=context:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InteractionConstraint{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=supplier:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=client:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=utilizedElement:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=supplier:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=client:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=utilizedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Manifestation{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedStereotype:Stereotype;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Stereotype{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestedPackage:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestingPackage:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedStereotype:Stereotype;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Stereotype{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestedPackage:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestingPackage:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedStereotype:Stereotype;sourceContainment:=ownedComment:Comment;};TargetContainer:=Stereotype{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestedPackage:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestingPackage:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=metaclassReference:ElementImport;sourceContainment:=ownedComment:Comment;};TargetContainer:=ElementImport{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedType:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=metamodelReference:PackageImport;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageImport{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedStereotype:Stereotype;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Stereotype{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestedPackage:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestingPackage:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestedPackage:Package;sourceContainment:=packageMerge:PackageMerge;};TargetContainer:=Package{targetContainment:=packageMerge:PackageMerge;};Movee:=PackageMerge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestingPackage:Package;sourceContainment:=packageMerge:PackageMerge;};TargetContainer:=Package{targetContainment:=packageMerge:PackageMerge;};Movee:=PackageMerge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestedPackage:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestingPackage:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedStereotype:Stereotype;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Stereotype{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedType:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestedPackage:Package;sourceContainment:=packagedElement:PackageableElement;};TargetContainer:=Package{targetContainment:=packagedElement:PackageableElement;};Movee:=PackageableElement;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestingPackage:Package;sourceContainment:=packagedElement:PackageableElement;};TargetContainer:=Package{targetContainment:=packagedElement:PackageableElement;};Movee:=PackageableElement;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedStereotype:Stereotype;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Stereotype{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestedPackage:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestingPackage:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestedPackage:Package;sourceContainment:=profileApplication:ProfileApplication;};TargetContainer:=Package{targetContainment:=profileApplication:ProfileApplication;};Movee:=ProfileApplication;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestingPackage:Package;sourceContainment:=profileApplication:ProfileApplication;};TargetContainer:=Package{targetContainment:=profileApplication:ProfileApplication;};Movee:=ProfileApplication;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestedPackage:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=nestingPackage:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Profile{containerReference:=ownedStereotype:Stereotype;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Stereotype{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=definingEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=partWithPort:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=definingEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=partWithPort:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=definingEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=partWithPort:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=definingEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=partWithPort:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=definingEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=partWithPort:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=definingEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=partWithPort:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=definingEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectorEnd{containerReference:=partWithPort:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=result:Parameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=Parameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=behavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=result:Parameter;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Parameter{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=behavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=OpaqueExpression{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StartClassifierBehaviorAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProfileApplication{containerReference:=applyingPackage:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProfileApplication{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProfileApplication{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProfileApplication{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProfileApplication{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProfileApplication{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ProfileApplication{containerReference:=appliedProfile:Profile;sourceContainment:=ownedComment:Comment;};TargetContainer:=Profile{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=regionAsInput:ExpansionRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ExpansionRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=regionAsOutput:ExpansionRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ExpansionRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=inState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=regionAsInput:ExpansionRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExpansionRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=regionAsOutput:ExpansionRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExpansionRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=inState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExpansionNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=behavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=start:OccurrenceSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=OccurrenceSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=finish:OccurrenceSpecification;sourceContainment:=ownedComment:Comment;};TargetContainer:=OccurrenceSpecification{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=behavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=start:OccurrenceSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OccurrenceSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=finish:OccurrenceSpecification;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OccurrenceSpecification{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=start:OccurrenceSpecification;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=OccurrenceSpecification{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=finish:OccurrenceSpecification;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=OccurrenceSpecification{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehaviorExecutionSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=variable:Variable;sourceContainment:=ownedComment:Comment;};TargetContainer:=Variable{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=variable:Variable;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Variable{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ClearVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=endType:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=navigableOwnedEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=memberEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=navigableOwnedEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=memberEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=endType:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=navigableOwnedEnd:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=attribute:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=memberEnd:Property;sourceContainment:=ownedEnd:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Association{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=value:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteStructuralFeatureAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=context:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=constrainedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=context:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeConstraint{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=client:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=supplier:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=client:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=supplier:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Realization{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=supplier:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=client:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=contract:Interface;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interface{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=implementingClassifier:BehavioredClassifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=supplier:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=client:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=contract:Interface;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interface{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=InterfaceRealization{containerReference:=implementingClassifier:BehavioredClassifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioredClassifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=class:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=bodyCondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=postcondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=precondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedOperation:Operation;sourceContainment:=ownedComment:Comment;};TargetContainer:=Operation{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=interface:Interface;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interface{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=datatype:DataType;sourceContainment:=ownedComment:Comment;};TargetContainer:=DataType{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=method:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=raisedException:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=method:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=class:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=datatype:DataType;sourceContainment:=ownedRule:Constraint;};TargetContainer:=DataType{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedOperation:Operation;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Operation{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=interface:Interface;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Interface{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedOperation:Operation;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Operation{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=interface:Interface;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Interface{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=datatype:DataType;sourceContainment:=elementImport:ElementImport;};TargetContainer:=DataType{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=class:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=method:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=featuringClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=class:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=interface:Interface;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Interface{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedOperation:Operation;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Operation{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=datatype:DataType;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=DataType{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=method:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedOperation:Operation;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Operation{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=method:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedOperation:Operation;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Operation{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=method:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=interface:Interface;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Interface{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=class:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=featuringClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=datatype:DataType;sourceContainment:=packageImport:PackageImport;};TargetContainer:=DataType{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedOperation:Operation;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Operation{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=method:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=interface:Interface;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Interface{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=method:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=featuringClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=class:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedOperation:Operation;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Operation{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=datatype:DataType;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=DataType{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=featuringClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=method:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=class:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=raisedException:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=redefinedOperation:Operation;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Operation{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=interface:Interface;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interface{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=datatype:DataType;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=DataType{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=bodyCondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=postcondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Operation{containerReference:=precondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=returnInformation:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=AcceptCallAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExceptionHandler{containerReference:=exceptionType:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExceptionHandler{containerReference:=protectedNode:ExecutableNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExecutableNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExceptionHandler{containerReference:=handlerBody:ExecutableNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ExecutableNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExceptionHandler{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExceptionHandler{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExceptionHandler{containerReference:=exceptionInput:ObjectNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ObjectNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=variable:Variable;sourceContainment:=ownedComment:Comment;};TargetContainer:=Variable{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=variable:Variable;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Variable{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadVariableAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=method:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=raisedException:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=method:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=featuringClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=method:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=raisedException:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=method:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=featuringClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=featuringClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=method:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=method:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BehavioralFeature{containerReference:=method:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=addition:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=includingCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=addition:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=includingCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Include{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=extendedRegion:Region;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Region{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=state:State;sourceContainment:=packageImport:PackageImport;};TargetContainer:=State{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=stateMachine:StateMachine;sourceContainment:=packageImport:PackageImport;};TargetContainer:=StateMachine{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=stateMachine:StateMachine;sourceContainment:=ownedComment:Comment;};TargetContainer:=StateMachine{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=extendedRegion:Region;sourceContainment:=ownedComment:Comment;};TargetContainer:=Region{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=state:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=extendedRegion:Region;sourceContainment:=transition:Transition;};TargetContainer:=Region{targetContainment:=transition:Transition;};Movee:=Transition;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=extendedRegion:Region;sourceContainment:=subvertex:Vertex;};TargetContainer:=Region{targetContainment:=subvertex:Vertex;};Movee:=Vertex;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=stateMachine:StateMachine;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StateMachine{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=extendedRegion:Region;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Region{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=state:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=stateMachine:StateMachine;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StateMachine{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=state:State;sourceContainment:=ownedRule:Constraint;};TargetContainer:=State{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=extendedRegion:Region;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Region{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=stateMachine:StateMachine;sourceContainment:=elementImport:ElementImport;};TargetContainer:=StateMachine{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=state:State;sourceContainment:=elementImport:ElementImport;};TargetContainer:=State{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=extendedRegion:Region;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Region{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Region{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=incoming:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=outgoing:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=incoming:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=outgoing:ActivityEdge;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=inState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=inState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Pin{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=argument:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=signal:Signal;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Signal{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=signal:Signal;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Signal{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=signal:Signal;sourceContainment:=ownedComment:Comment;};TargetContainer:=Signal{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=onPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=onPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=signal:Signal;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Signal{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=BroadcastSignalAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Namespace{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinedTransition:Transition;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Transition{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=container:Region;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Region{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=container:Region;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Region{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinedTransition:Transition;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Transition{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinedTransition:Transition;sourceContainment:=effect:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinedTransition:Transition;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Transition{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=container:Region;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Region{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinedTransition:Transition;sourceContainment:=trigger:Trigger;};TargetContainer:=Transition{targetContainment:=trigger:Trigger;};Movee:=Trigger;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinedTransition:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=source:Vertex;sourceContainment:=ownedComment:Comment;};TargetContainer:=Vertex{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=target:Vertex;sourceContainment:=ownedComment:Comment;};TargetContainer:=Vertex{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=guard:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=container:Region;sourceContainment:=ownedComment:Comment;};TargetContainer:=Region{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=source:Vertex;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Vertex{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=target:Vertex;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Vertex{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinedTransition:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=container:Region;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Region{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Transition{containerReference:=guard:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=container:Region;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Region{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=incoming:Transition;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Transition{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=outgoing:Transition;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Transition{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=packageImport:PackageImport;};TargetContainer:=State{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=submachine:StateMachine;sourceContainment:=packageImport:PackageImport;};TargetContainer:=StateMachine{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=connection:ConnectionPointReference;};TargetContainer:=State{targetContainment:=connection:ConnectionPointReference;};Movee:=ConnectionPointReference;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=submachine:StateMachine;sourceContainment:=entry:Behavior;};TargetContainer:=StateMachine{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=entry:Behavior;};TargetContainer:=State{targetContainment:=exit:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=entry:Behavior;};TargetContainer:=State{targetContainment:=doActivity:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=entry:Behavior;};TargetContainer:=State{targetContainment:=entry:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=incoming:Transition;sourceContainment:=entry:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=outgoing:Transition;sourceContainment:=entry:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=submachine:StateMachine;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StateMachine{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=incoming:Transition;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Transition{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=outgoing:Transition;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Transition{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=ownedRule:Constraint;};TargetContainer:=State{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=container:Region;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Region{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=incoming:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=outgoing:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=submachine:StateMachine;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StateMachine{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=container:Region;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Region{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=stateInvariant:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=incoming:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=outgoing:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=stateInvariant:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=submachine:StateMachine;sourceContainment:=ownedComment:Comment;};TargetContainer:=StateMachine{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=container:Region;sourceContainment:=ownedComment:Comment;};TargetContainer:=Region{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=submachine:StateMachine;sourceContainment:=exit:Behavior;};TargetContainer:=StateMachine{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=exit:Behavior;};TargetContainer:=State{targetContainment:=exit:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=exit:Behavior;};TargetContainer:=State{targetContainment:=doActivity:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=exit:Behavior;};TargetContainer:=State{targetContainment:=entry:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=incoming:Transition;sourceContainment:=exit:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=outgoing:Transition;sourceContainment:=exit:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=incoming:Transition;sourceContainment:=deferrableTrigger:Trigger;};TargetContainer:=Transition{targetContainment:=trigger:Trigger;};Movee:=Trigger;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=outgoing:Transition;sourceContainment:=deferrableTrigger:Trigger;};TargetContainer:=Transition{targetContainment:=trigger:Trigger;};Movee:=Trigger;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=deferrableTrigger:Trigger;};TargetContainer:=State{targetContainment:=deferrableTrigger:Trigger;};Movee:=Trigger;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=submachine:StateMachine;sourceContainment:=region:Region;};TargetContainer:=StateMachine{targetContainment:=region:Region;};Movee:=Region;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=region:Region;};TargetContainer:=State{targetContainment:=region:Region;};Movee:=Region;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=submachine:StateMachine;sourceContainment:=doActivity:Behavior;};TargetContainer:=StateMachine{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=doActivity:Behavior;};TargetContainer:=State{targetContainment:=exit:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=doActivity:Behavior;};TargetContainer:=State{targetContainment:=doActivity:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=doActivity:Behavior;};TargetContainer:=State{targetContainment:=entry:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=incoming:Transition;sourceContainment:=doActivity:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=outgoing:Transition;sourceContainment:=doActivity:Behavior;};TargetContainer:=Transition{targetContainment:=effect:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=submachine:StateMachine;sourceContainment:=elementImport:ElementImport;};TargetContainer:=StateMachine{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=incoming:Transition;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Transition{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=outgoing:Transition;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Transition{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=elementImport:ElementImport;};TargetContainer:=State{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=container:Region;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Region{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=submachine:StateMachine;sourceContainment:=connectionPoint:Pseudostate;};TargetContainer:=StateMachine{targetContainment:=connectionPoint:Pseudostate;};Movee:=Pseudostate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=State{containerReference:=redefinedState:State;sourceContainment:=connectionPoint:Pseudostate;};TargetContainer:=State{targetContainment:=connectionPoint:Pseudostate;};Movee:=Pseudostate;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=supplier:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=client:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=contract:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=substitutingClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=contract:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=substitutingClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=supplier:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=client:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Substitution{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Action{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=inputValue:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=selection:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=inState:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=incoming:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=upperBound:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=inState:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=selection:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DataStoreNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=deployedElement:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=deployedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=attribute:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=part:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=ownedPort:Port;sourceContainment:=deployment:Deployment;};TargetContainer:=Port{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Device{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=qualifier:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=qualifier:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadLinkObjectEndQualifierAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeObservation{containerReference:=event:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeObservation{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeObservation{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeObservation{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeObservation{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeObservation{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeObservation{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeObservation{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeObservation{containerReference:=event:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeObservation{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ElementImport{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ElementImport{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ElementImport{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ElementImport{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ElementImport{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ElementImport{containerReference:=importedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ElementImport{containerReference:=importingNamespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=inputValue:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=WriteLinkAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=output:OutputPin;sourceContainment:=value:ValueSpecification;};TargetContainer:=OutputPin{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=incoming:ActivityEdge;sourceContainment:=value:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=value:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=input:InputPin;sourceContainment:=value:ValueSpecification;};TargetContainer:=InputPin{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=input:InputPin;sourceContainment:=value:ValueSpecification;};TargetContainer:=InputPin{targetContainment:=upperBound:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=output:OutputPin;sourceContainment:=value:ValueSpecification;};TargetContainer:=OutputPin{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=output:OutputPin;sourceContainment:=value:ValueSpecification;};TargetContainer:=OutputPin{targetContainment:=upperBound:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=input:InputPin;sourceContainment:=value:ValueSpecification;};TargetContainer:=InputPin{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=incoming:ActivityEdge;sourceContainment:=value:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=value:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ValueSpecificationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Observation{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Observation{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Observation{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Observation{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Observation{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Observation{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Observation{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Observation{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Port{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=end:ConnectorEnd;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Port{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Port{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=end:ConnectorEnd;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=association:Association;sourceContainment:=qualifier:Property;};TargetContainer:=Association{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=owningAssociation:Association;sourceContainment:=qualifier:Property;};TargetContainer:=Association{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=datatype:DataType;sourceContainment:=qualifier:Property;};TargetContainer:=DataType{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=interface:Interface;sourceContainment:=qualifier:Property;};TargetContainer:=Interface{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=provided:Interface;sourceContainment:=qualifier:Property;};TargetContainer:=Interface{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=required:Interface;sourceContainment:=qualifier:Property;};TargetContainer:=Interface{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=protocol:ProtocolStateMachine;sourceContainment:=qualifier:Property;};TargetContainer:=ProtocolStateMachine{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=qualifier:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=class:Class;sourceContainment:=qualifier:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=class:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=association:Association;sourceContainment:=ownedComment:Comment;};TargetContainer:=Association{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=owningAssociation:Association;sourceContainment:=ownedComment:Comment;};TargetContainer:=Association{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=protocol:ProtocolStateMachine;sourceContainment:=ownedComment:Comment;};TargetContainer:=ProtocolStateMachine{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=end:ConnectorEnd;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectorEnd{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=deployedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=interface:Interface;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interface{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=provided:Interface;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interface{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=required:Interface;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interface{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=datatype:DataType;sourceContainment:=ownedComment:Comment;};TargetContainer:=DataType{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=featuringClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=protocol:ProtocolStateMachine;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ProtocolStateMachine{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=class:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=deployedElement:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=interface:Interface;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interface{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=provided:Interface;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interface{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=required:Interface;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interface{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=datatype:DataType;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=DataType{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=association:Association;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Association{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=owningAssociation:Association;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Association{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Port{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=end:ConnectorEnd;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Port{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Port{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=end:ConnectorEnd;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=deployment:Deployment;};TargetContainer:=Port{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Port{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=subsettedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=opposite:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=associationEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=end:ConnectorEnd;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Port{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=redefinedPort:Port;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Port{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Port{containerReference:=end:ConnectorEnd;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=value:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=removeAt:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=structuralFeature:StructuralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=RemoveStructuralFeatureValueAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=object:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=deployedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=deployedElement:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=part:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=attribute:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=ownedPort:Port;sourceContainment:=deployment:Deployment;};TargetContainer:=Port{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Node{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralSpecification{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralSpecification{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralSpecification{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=LiteralSpecification{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=group:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=postcondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=precondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=node:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=partition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=BehavioredClassifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=substitution:Substitution;};TargetContainer:=BehavioredClassifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=BehavioredClassifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioralFeature{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=generalization:Generalization;};TargetContainer:=BehavioredClassifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=specification:BehavioralFeature;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioralFeature{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioredClassifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioredClassifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=specification:BehavioralFeature;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioralFeature{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=BehavioredClassifier{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=group:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=node:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=specification:BehavioralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=partition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=postcondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=precondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Activity{containerReference:=context:BehavioredClassifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioredClassifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=target:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=argument:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=operation:Operation;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Operation{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=operation:Operation;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Operation{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=onPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=operation:Operation;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Operation{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=operation:Operation;sourceContainment:=ownedComment:Comment;};TargetContainer:=Operation{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=onPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=CallOperationAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeEvent{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeEvent{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeEvent{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeEvent{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeEvent{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeEvent{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeEvent{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TimeEvent{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=classifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=classifier:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=classifier:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=result:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=classifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ReadExtentAction{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEvent{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEvent{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEvent{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEvent{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEvent{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEvent{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEvent{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MessageEvent{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=decisionInput:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=decisionInputFlow:ObjectFlow;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ObjectFlow{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=decisionInputFlow:ObjectFlow;sourceContainment:=ownedComment:Comment;};TargetContainer:=ObjectFlow{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=decisionInput:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DecisionNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=outgoing:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=incoming:Transition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Transition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=container:Region;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Region{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=entry:Pseudostate;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Pseudostate{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=exit:Pseudostate;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Pseudostate{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=state:State;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=State{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=outgoing:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=incoming:Transition;sourceContainment:=ownedComment:Comment;};TargetContainer:=Transition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=entry:Pseudostate;sourceContainment:=ownedComment:Comment;};TargetContainer:=Pseudostate{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=exit:Pseudostate;sourceContainment:=ownedComment:Comment;};TargetContainer:=Pseudostate{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=container:Region;sourceContainment:=ownedComment:Comment;};TargetContainer:=Region{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=state:State;sourceContainment:=ownedComment:Comment;};TargetContainer:=State{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectionPointReference{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=context:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=constrainedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=context:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Constraint{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=observation:Observation;sourceContainment:=ownedComment:Comment;};TargetContainer:=Observation{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Duration{containerReference:=observation:Observation;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Observation{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=weight:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=weight:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=target:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=source:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=interrupts:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=guard:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=weight:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=guard:ValueSpecification;};TargetContainer:=ActivityEdge{targetContainment:=guard:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=target:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=source:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=interrupts:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=redefinedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ControlFlow{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateSignature{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateSignature{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateSignature{containerReference:=template:TemplateableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=TemplateSignature{containerReference:=parameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=BehavioredClassifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=BehavioredClassifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioralFeature{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=postcondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=precondition:Constraint;sourceContainment:=ownedComment:Comment;};TargetContainer:=Constraint{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioralFeature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioredClassifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=packageImport:PackageImport;};TargetContainer:=BehavioralFeature{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=Behavior{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameter:Parameter;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameter:Parameter;};Movee:=Parameter;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=BehavioredClassifier{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=generalization:Generalization;};TargetContainer:=BehavioredClassifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=substitution:Substitution;};TargetContainer:=BehavioredClassifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioralFeature{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=BehavioredClassifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioralFeature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=postcondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=precondition:Constraint;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Constraint{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=BehavioredClassifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=context:BehavioredClassifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=BehavioredClassifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=specification:BehavioralFeature;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=BehavioralFeature{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=FunctionBehavior{containerReference:=redefinedBehavior:Behavior;sourceContainment:=ownedParameterSet:ParameterSet;};TargetContainer:=Behavior{targetContainment:=ownedParameterSet:ParameterSet;};Movee:=ParameterSet;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Interface{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Interface{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Extension{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Class{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Behavior{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=package:Package;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Package{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=elementImport:ElementImport;};TargetContainer:=UseCase{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Class{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Interface{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Interface{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Classifier{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=UseCase{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Extension{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Behavior{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=package:Package;sourceContainment:=ownedTemplateSignature:TemplateSignature;};TargetContainer:=Package{targetContainment:=ownedTemplateSignature:TemplateSignature;};Movee:=TemplateSignature;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Interface{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Interface{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Behavior{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=ownedPort:Port;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Port{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Extension{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=attribute:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=part:Property;sourceContainment:=ownedAttribute:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=package:Package;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Package{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Interface{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Interface{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Extension{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Class{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=packageImport:PackageImport;};TargetContainer:=UseCase{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Behavior{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Classifier{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Behavior{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Class{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=UseCase{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Extension{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Interface{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=ownedUseCase:UseCase;};TargetContainer:=Interface{targetContainment:=ownedUseCase:UseCase;};Movee:=UseCase;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Extension{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=package:Package;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Package{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=UseCase{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Interface{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Interface{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Behavior{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Classifier{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=templateBinding:TemplateBinding;};TargetContainer:=Class{targetContainment:=templateBinding:TemplateBinding;};Movee:=TemplateBinding;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Behavior{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=ownedConnector:Connector;};TargetContainer:=Class{targetContainment:=ownedConnector:Connector;};Movee:=Connector;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=package:Package;sourceContainment:=packagedElement:PackageableElement;};TargetContainer:=Package{targetContainment:=packagedElement:PackageableElement;};Movee:=PackageableElement;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=generalization:Generalization;};TargetContainer:=Behavior{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=generalization:Generalization;};TargetContainer:=Classifier{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=generalization:Generalization;};TargetContainer:=Class{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=generalization:Generalization;};TargetContainer:=Extension{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=generalization:Generalization;};TargetContainer:=Interface{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=generalization:Generalization;};TargetContainer:=Interface{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=generalization:Generalization;};TargetContainer:=UseCase{targetContainment:=generalization:Generalization;};Movee:=Generalization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=package:Package;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Package{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=inheritedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Behavior{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralizationSet{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=ownedPort:Port;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Port{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=attribute:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=part:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=role:ConnectableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ConnectableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=feature:Feature;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Feature{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=representation:CollaborationUse;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=CollaborationUse{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interface{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interface{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Extension{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=ownedComment:Comment;};TargetContainer:=Extension{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=inheritedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=feature:Feature;sourceContainment:=ownedComment:Comment;};TargetContainer:=Feature{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=attribute:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=part:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=powertypeExtent:GeneralizationSet;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralizationSet{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=package:Package;sourceContainment:=ownedComment:Comment;};TargetContainer:=Package{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=role:ConnectableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=representation:CollaborationUse;sourceContainment:=ownedComment:Comment;};TargetContainer:=CollaborationUse{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interface{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interface{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=ownedPort:Port;sourceContainment:=ownedComment:Comment;};TargetContainer:=Port{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedComment:Comment;};TargetContainer:=Behavior{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Class{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Interface{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Interface{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedOperation:Operation;};TargetContainer:=Behavior{targetContainment:=ownedOperation:Operation;};Movee:=Operation;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Behavior{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=UseCase{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=ownedBehavior:Behavior;};TargetContainer:=Class{targetContainment:=ownedBehavior:Behavior;};Movee:=Behavior;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Behavior{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Interface{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Interface{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=nestedClassifier:Classifier;};TargetContainer:=Class{targetContainment:=nestedClassifier:Classifier;};Movee:=Classifier;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Behavior{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=Class{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=interfaceRealization:InterfaceRealization;};TargetContainer:=UseCase{targetContainment:=interfaceRealization:InterfaceRealization;};Movee:=InterfaceRealization;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Classifier{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Class{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Interface{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Interface{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Behavior{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=UseCase{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=collaborationUse:CollaborationUse;};TargetContainer:=Extension{targetContainment:=collaborationUse:CollaborationUse;};Movee:=CollaborationUse;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=substitution:Substitution;};TargetContainer:=Extension{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=substitution:Substitution;};TargetContainer:=Classifier{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=substitution:Substitution;};TargetContainer:=UseCase{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=substitution:Substitution;};TargetContainer:=Class{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=substitution:Substitution;};TargetContainer:=Behavior{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=substitution:Substitution;};TargetContainer:=Interface{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=substitution:Substitution;};TargetContainer:=Interface{targetContainment:=substitution:Substitution;};Movee:=Substitution;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedReception:Reception;};TargetContainer:=Behavior{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=ownedReception:Reception;};TargetContainer:=Interface{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=ownedReception:Reception;};TargetContainer:=Interface{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=ownedReception:Reception;};TargetContainer:=Class{targetContainment:=ownedReception:Reception;};Movee:=Reception;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=classifierBehavior:Behavior;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Behavior{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=superClass:Class;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Class{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=package:Package;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Package{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=extension:Extension;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Extension{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=useCase:UseCase;sourceContainment:=ownedRule:Constraint;};TargetContainer:=UseCase{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=general:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=redefinedClassifier:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=required:Interface;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Interface{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Component{containerReference:=provided:Interface;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Interface{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=end:ConnectorEnd;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectorEnd{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ConnectableElement{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=deployment:Deployment;};TargetContainer:=Property{targetContainment:=deployment:Deployment;};Movee:=Deployment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=end:ConnectorEnd;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=end:ConnectorEnd;sourceContainment:=lowerValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=end:ConnectorEnd;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=end:ConnectorEnd;sourceContainment:=defaultValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=ownedComment:Comment;};TargetContainer:=Property{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=featuringClassifier:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=class:Class;sourceContainment:=ownedComment:Comment;};TargetContainer:=Class{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=owningAssociation:Association;sourceContainment:=ownedComment:Comment;};TargetContainer:=Association{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=association:Association;sourceContainment:=ownedComment:Comment;};TargetContainer:=Association{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=end:ConnectorEnd;sourceContainment:=ownedComment:Comment;};TargetContainer:=ConnectorEnd{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=deployedElement:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=interface:Interface;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interface{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=datatype:DataType;sourceContainment:=ownedComment:Comment;};TargetContainer:=DataType{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=type:Type;sourceContainment:=ownedComment:Comment;};TargetContainer:=Type{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=defaultValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=Property{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=end:ConnectorEnd;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=lowerValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=end:ConnectorEnd;sourceContainment:=upperValue:ValueSpecification;};TargetContainer:=ConnectorEnd{targetContainment:=upperValue:ValueSpecification;};Movee:=ValueSpecification;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=owningAssociation:Association;sourceContainment:=qualifier:Property;};TargetContainer:=Association{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=association:Association;sourceContainment:=qualifier:Property;};TargetContainer:=Association{targetContainment:=ownedEnd:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=datatype:DataType;sourceContainment:=qualifier:Property;};TargetContainer:=DataType{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=interface:Interface;sourceContainment:=qualifier:Property;};TargetContainer:=Interface{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=class:Class;sourceContainment:=qualifier:Property;};TargetContainer:=Class{targetContainment:=ownedAttribute:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=qualifier:Property;};TargetContainer:=Property{targetContainment:=qualifier:Property;};Movee:=Property;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=featuringClassifier:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=class:Class;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Class{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=type:Type;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Type{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=deployedElement:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=opposite:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=subsettedProperty:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=redefinedProperty:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=associationEnd:Property;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Property{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=interface:Interface;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interface{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=datatype:DataType;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=DataType{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=owningAssociation:Association;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Association{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Property{containerReference:=association:Association;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Association{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=supplier:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=client:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=supplier:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=client:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Dependency{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=structuredNodeInput:InputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeInput:InputPin;};Movee:=InputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=edge:ActivityEdge;};TargetContainer:=StructuredActivityNode{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inActivity:Activity;sourceContainment:=edge:ActivityEdge;};TargetContainer:=Activity{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=activity:Activity;sourceContainment:=edge:ActivityEdge;};TargetContainer:=Activity{targetContainment:=edge:ActivityEdge;};Movee:=ActivityEdge;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=handler:ExceptionHandler;};TargetContainer:=StructuredActivityNode{targetContainment:=handler:ExceptionHandler;};Movee:=ExceptionHandler;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=namespace:Namespace;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inActivity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=activity:Activity;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=context:Classifier;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPrecondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=variable:Variable;};TargetContainer:=StructuredActivityNode{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inActivity:Activity;sourceContainment:=variable:Variable;};TargetContainer:=Activity{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=activity:Activity;sourceContainment:=variable:Variable;};TargetContainer:=Activity{targetContainment:=variable:Variable;};Movee:=Variable;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=context:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=member:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=ownedMember:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=superGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=subgroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityGroup{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=containedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=importedMember:PackageableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=PackageableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=input:InputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityPartition{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=StructuredActivityNode{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=containedEdge:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=incoming:ActivityEdge;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=ActivityEdge{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=output:OutputPin;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=OutputPin{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inActivity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=activity:Activity;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Activity{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inActivity:Activity;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Activity{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=activity:Activity;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Activity{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=elementImport:ElementImport;};TargetContainer:=StructuredActivityNode{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=namespace:Namespace;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Namespace{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=context:Classifier;sourceContainment:=elementImport:ElementImport;};TargetContainer:=Classifier{targetContainment:=elementImport:ElementImport;};Movee:=ElementImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=structuredNodeOutput:OutputPin;};TargetContainer:=StructuredActivityNode{targetContainment:=structuredNodeOutput:OutputPin;};Movee:=OutputPin;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inActivity:Activity;sourceContainment:=node:ActivityNode;};TargetContainer:=Activity{targetContainment:=ownedNode:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=activity:Activity;sourceContainment:=node:ActivityNode;};TargetContainer:=Activity{targetContainment:=ownedNode:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=node:ActivityNode;};TargetContainer:=StructuredActivityNode{targetContainment:=node:ActivityNode;};Movee:=ActivityNode;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=namespace:Namespace;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inActivity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=activity:Activity;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=context:Classifier;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=localPostcondition:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=member:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=ownedMember:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=context:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=superGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=subgroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inGroup:ActivityGroup;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityGroup{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=containedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinedNode:ActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedComment:Comment;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=importedMember:PackageableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=PackageableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inActivity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=activity:Activity;sourceContainment:=ownedComment:Comment;};TargetContainer:=Activity{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=input:InputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=InputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=outgoing:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=containedEdge:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=incoming:ActivityEdge;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityEdge{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inPartition:ActivityPartition;sourceContainment:=ownedComment:Comment;};TargetContainer:=ActivityPartition{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inInterruptibleRegion:InterruptibleActivityRegion;sourceContainment:=ownedComment:Comment;};TargetContainer:=InterruptibleActivityRegion{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=output:OutputPin;sourceContainment:=ownedComment:Comment;};TargetContainer:=OutputPin{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=packageImport:PackageImport;};TargetContainer:=StructuredActivityNode{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=context:Classifier;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Classifier{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=namespace:Namespace;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Namespace{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inActivity:Activity;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Activity{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=activity:Activity;sourceContainment:=packageImport:PackageImport;};TargetContainer:=Activity{targetContainment:=packageImport:PackageImport;};Movee:=PackageImport;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPrecondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=localPostcondition:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=namespace:Namespace;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inActivity:Activity;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=activity:Activity;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Activity{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=context:Classifier;sourceContainment:=ownedRule:Constraint;};TargetContainer:=Classifier{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=StructuredActivityNode{containerReference:=inStructuredNode:StructuredActivityNode;sourceContainment:=ownedRule:Constraint;};TargetContainer:=StructuredActivityNode{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=InteractionOperand{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=toBefore:GeneralOrdering;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralOrdering{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=toAfter:GeneralOrdering;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=GeneralOrdering{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=message:Message;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Message{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Interaction{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=covered:Lifeline;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Lifeline{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=toBefore:GeneralOrdering;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralOrdering{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=toAfter:GeneralOrdering;sourceContainment:=ownedComment:Comment;};TargetContainer:=GeneralOrdering{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=message:Message;sourceContainment:=ownedComment:Comment;};TargetContainer:=Message{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=covered:Lifeline;sourceContainment:=ownedComment:Comment;};TargetContainer:=Lifeline{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=ownedComment:Comment;};TargetContainer:=Interaction{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=ownedComment:Comment;};TargetContainer:=InteractionOperand{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=enclosingInteraction:Interaction;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=Interaction{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=DestructionOccurrenceSpecification{containerReference:=enclosingOperand:InteractionOperand;sourceContainment:=generalOrdering:GeneralOrdering;};TargetContainer:=InteractionOperand{targetContainment:=generalOrdering:GeneralOrdering;};Movee:=GeneralOrdering;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=supplier:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=client:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=deployedArtifact:DeployedArtifact;sourceContainment:=ownedComment:Comment;};TargetContainer:=DeployedArtifact{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=location:DeploymentTarget;sourceContainment:=ownedComment:Comment;};TargetContainer:=DeploymentTarget{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=supplier:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=client:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=location:DeploymentTarget;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=DeploymentTarget{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=deployedArtifact:DeployedArtifact;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=DeployedArtifact{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Deployment{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterSet{containerReference:=parameter:Parameter;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Parameter{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterSet{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterSet{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterSet{containerReference:=namespace:Namespace;sourceContainment:=condition:Constraint;};TargetContainer:=Namespace{targetContainment:=ownedRule:Constraint;};Movee:=Constraint;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterSet{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterSet{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterSet{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterSet{containerReference:=parameter:Parameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=Parameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ParameterSet{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MultiplicityElement{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=MultiplicityElement{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=client:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=supplier:NamedElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=NamedElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=source:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=relatedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=target:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=templateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=owningTemplateParameter:TemplateParameter;sourceContainment:=ownedComment:Comment;};TargetContainer:=TemplateParameter{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=client:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=supplier:NamedElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=NamedElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=Abstraction{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=redefinitionContext:Classifier;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Classifier{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=RedefinableElement{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=clientDependency:Dependency;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Dependency{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=namespace:Namespace;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=Namespace{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=useCase:UseCase;sourceContainment:=nameExpression:StringExpression;};TargetContainer:=UseCase{targetContainment:=nameExpression:StringExpression;};Movee:=StringExpression;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=clientDependency:Dependency;sourceContainment:=ownedComment:Comment;};TargetContainer:=Dependency{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=redefinitionContext:Classifier;sourceContainment:=ownedComment:Comment;};TargetContainer:=Classifier{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=ownedElement:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=owner:Element;sourceContainment:=ownedComment:Comment;};TargetContainer:=Element{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=redefinedElement:RedefinableElement;sourceContainment:=ownedComment:Comment;};TargetContainer:=RedefinableElement{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=useCase:UseCase;sourceContainment:=ownedComment:Comment;};TargetContainer:=UseCase{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
"MoveX for uml" maps <MoveX> {SourceContainer:=ExtensionPoint{containerReference:=namespace:Namespace;sourceContainment:=ownedComment:Comment;};TargetContainer:=Namespace{targetContainment:=ownedComment:Comment;};Movee:=Comment;}
