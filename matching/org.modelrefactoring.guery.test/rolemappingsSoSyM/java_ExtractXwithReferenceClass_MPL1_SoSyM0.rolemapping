"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Parametrizable{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ClassMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Method{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=InterfaceMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Constructor{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=AnnotationAttribute{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Parametrizable{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ClassMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Method{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=InterfaceMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Constructor{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=AnnotationAttribute{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=annotationsAndModifiers:AnnotationInstanceOrModifier;};Extract:=AnnotationInstanceOrModifier;NewContainer:=Parameter{moved:=annotationsAndModifiers:AnnotationInstanceOrModifier;};ContainerContainer:=Parametrizable{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=annotationsAndModifiers:AnnotationInstanceOrModifier;};Extract:=AnnotationInstanceOrModifier;NewContainer:=Parameter{moved:=annotationsAndModifiers:AnnotationInstanceOrModifier;};ContainerContainer:=ClassMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=annotationsAndModifiers:AnnotationInstanceOrModifier;};Extract:=AnnotationInstanceOrModifier;NewContainer:=Parameter{moved:=annotationsAndModifiers:AnnotationInstanceOrModifier;};ContainerContainer:=Method{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=annotationsAndModifiers:AnnotationInstanceOrModifier;};Extract:=AnnotationInstanceOrModifier;NewContainer:=Parameter{moved:=annotationsAndModifiers:AnnotationInstanceOrModifier;};ContainerContainer:=InterfaceMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=annotationsAndModifiers:AnnotationInstanceOrModifier;};Extract:=AnnotationInstanceOrModifier;NewContainer:=Parameter{moved:=annotationsAndModifiers:AnnotationInstanceOrModifier;};ContainerContainer:=Constructor{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=annotationsAndModifiers:AnnotationInstanceOrModifier;};Extract:=AnnotationInstanceOrModifier;NewContainer:=Parameter{moved:=annotationsAndModifiers:AnnotationInstanceOrModifier;};ContainerContainer:=AnnotationAttribute{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Parameter{moved:=typeArguments:TypeArgument;};ContainerContainer:=Parametrizable{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Parameter{moved:=typeArguments:TypeArgument;};ContainerContainer:=ClassMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Parameter{moved:=typeArguments:TypeArgument;};ContainerContainer:=Method{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Parameter{moved:=typeArguments:TypeArgument;};ContainerContainer:=InterfaceMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Parameter{moved:=typeArguments:TypeArgument;};ContainerContainer:=Constructor{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Parameter{moved:=typeArguments:TypeArgument;};ContainerContainer:=AnnotationAttribute{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=Parametrizable{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=ClassMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=Method{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=InterfaceMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=Constructor{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=AnnotationAttribute{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=Constructor{source:=parameters:Parameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=InterfaceMethod{source:=parameters:Parameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=ClassMethod{source:=parameters:Parameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=AnnotationAttribute{source:=parameters:Parameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=Method{source:=parameters:Parameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Parametrizable{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ClassMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Method{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=InterfaceMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Constructor{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=AnnotationAttribute{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Parametrizable{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ClassMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Method{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=InterfaceMethod{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Constructor{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Parameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=Parameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=AnnotationAttribute{source:=parameters:Parameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for types" maps <ExtractXwithReferenceClass> {OrigContainer:=ClassifierReference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=ClassifierReference{moved:=typeArguments:TypeArgument;};ContainerContainer:=NamespaceClassifierReference{source:=classifierReferences:ClassifierReference;target:=classifierReferences:ClassifierReference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=Reference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=NewConstructorCall{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=ExplicitConstructorCall{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=ArrayInstantiationByValuesUntyped{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=MethodCall{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=PrimitiveTypeReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=SelfReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=ArrayInstantiationBySize{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=ElementReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for expressions" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=NestedExpression{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=ArrayInstantiationByValues{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=ArrayInstantiationByValuesTyped{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=Instantiation{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=ReflectiveClassReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=AnnotationInstance{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=IdentifierReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=ArrayInstantiation{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=Reference{moved:=arraySelectors:ArraySelector;};ContainerContainer:=StringReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=Reference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=NewConstructorCall{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=ExplicitConstructorCall{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=ArrayInstantiationByValuesUntyped{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=MethodCall{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=PrimitiveTypeReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=SelfReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=ArrayInstantiationBySize{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=ElementReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for expressions" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=NestedExpression{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=ArrayInstantiationByValues{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=ArrayInstantiationByValuesTyped{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=Instantiation{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=ReflectiveClassReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=AnnotationInstance{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=IdentifierReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=ArrayInstantiation{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=next:Reference;};Extract:=Reference;NewContainer:=Reference{moved:=next:Reference;};ContainerContainer:=StringReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=Reference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=NewConstructorCall{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=ExplicitConstructorCall{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=ArrayInstantiationByValuesUntyped{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=MethodCall{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=PrimitiveTypeReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=SelfReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=ArrayInstantiationBySize{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=ElementReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for expressions" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=NestedExpression{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=ArrayInstantiationByValues{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=ArrayInstantiationByValuesTyped{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=Instantiation{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=ReflectiveClassReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=AnnotationInstance{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=IdentifierReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=ArrayInstantiation{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=Reference{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=Reference{moved:=typeArguments:TypeArgument;};ContainerContainer:=StringReference{source:=next:Reference;target:=next:Reference;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=ClassMethod{source:=typeParameters:TypeParameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=Method{source:=typeParameters:TypeParameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=InterfaceMethod{source:=typeParameters:TypeParameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=Constructor{source:=typeParameters:TypeParameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=Parameter{moved:=typeReference:TypeReference;};ContainerContainer:=AnnotationAttribute{source:=typeParameters:TypeParameter;target:=parameters:Parameter;};}
"ExtractXwithReferenceClass for classifiers" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=Class{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=Constructor{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for classifiers" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=Interface{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for generics" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=TypeParametrizable{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for classifiers" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=ConcreteClassifier{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=InterfaceMethod{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for classifiers" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=Annotation{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=ClassMethod{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for classifiers" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=Enumeration{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=AnnotationAttribute{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeParameter{extracts:=extendTypes:TypeReference;};Extract:=TypeReference;NewContainer:=TypeParameter{moved:=extendTypes:TypeReference;};ContainerContainer:=Method{source:=typeParameters:TypeParameter;target:=typeParameters:TypeParameter;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=ArrayInitializer{extracts:=initialValues:ArrayInitializationValue;};Extract:=ArrayInitializationValue;NewContainer:=ArrayInitializer{moved:=initialValues:ArrayInitializationValue;};ContainerContainer:=ArrayInstantiationByValues{source:=arrayInitializer:ArrayInitializer;target:=arrayInitializer:ArrayInitializer;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=ArrayInitializer{extracts:=initialValues:ArrayInitializationValue;};Extract:=ArrayInitializationValue;NewContainer:=ArrayInitializer{moved:=initialValues:ArrayInitializationValue;};ContainerContainer:=ArrayInstantiationByValuesTyped{source:=arrayInitializer:ArrayInitializer;target:=arrayInitializer:ArrayInitializer;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=ArrayInitializer{extracts:=initialValues:ArrayInitializationValue;};Extract:=ArrayInitializationValue;NewContainer:=ArrayInitializer{moved:=initialValues:ArrayInitializationValue;};ContainerContainer:=ArrayInstantiationByValuesUntyped{source:=arrayInitializer:ArrayInitializer;target:=arrayInitializer:ArrayInitializer;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=Block{extracts:=modifiers:Modifier;};Extract:=Modifier;NewContainer:=Block{moved:=modifiers:Modifier;};ContainerContainer:=TryBlock{source:=finallyBlock:Block;target:=finallyBlock:Block;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=Block{extracts:=statements:Statement;};Extract:=Statement;NewContainer:=CatchBlock{moved:=statements:Statement;};ContainerContainer:=TryBlock{source:=finallyBlock:Block;target:=catcheBlocks:CatchBlock;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=Block{extracts:=statements:Statement;};Extract:=Statement;NewContainer:=Block{moved:=statements:Statement;};ContainerContainer:=TryBlock{source:=finallyBlock:Block;target:=finallyBlock:Block;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalField{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalField{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Field{source:=additionalFields:AdditionalField;target:=additionalFields:AdditionalField;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalField{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalField{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Field{source:=additionalFields:AdditionalField;target:=additionalFields:AdditionalField;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalField{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Field{source:=additionalFields:AdditionalField;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalField{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Field{source:=additionalFields:AdditionalField;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalField{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalField{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Field{source:=additionalFields:AdditionalField;target:=additionalFields:AdditionalField;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalField{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalField{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Field{source:=additionalFields:AdditionalField;target:=additionalFields:AdditionalField;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalField{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Field{source:=additionalFields:AdditionalField;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalField{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Field{source:=additionalFields:AdditionalField;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalField{extracts:=initialValue:Expression;};Extract:=Expression;NewContainer:=AdditionalField{moved:=initialValue:Expression;};ContainerContainer:=Field{source:=additionalFields:AdditionalField;target:=additionalFields:AdditionalField;};}
"ExtractXwithReferenceClass for classifiers" maps <ExtractXwithReferenceClass> {OrigContainer:=EnumConstant{extracts:=anonymousClass:AnonymousClass;};Extract:=AnonymousClass;NewContainer:=EnumConstant{moved:=anonymousClass:AnonymousClass;};ContainerContainer:=Enumeration{source:=constants:EnumConstant;target:=constants:EnumConstant;};}
"ExtractXwithReferenceClass for classifiers" maps <ExtractXwithReferenceClass> {OrigContainer:=EnumConstant{extracts:=arguments:Expression;};Extract:=Expression;NewContainer:=EnumConstant{moved:=arguments:Expression;};ContainerContainer:=Enumeration{source:=constants:EnumConstant;target:=constants:EnumConstant;};}
"ExtractXwithReferenceClass for classifiers" maps <ExtractXwithReferenceClass> {OrigContainer:=EnumConstant{extracts:=annotations:AnnotationInstance;};Extract:=AnnotationInstance;NewContainer:=EnumConstant{moved:=annotations:AnnotationInstance;};ContainerContainer:=Enumeration{source:=constants:EnumConstant;target:=constants:EnumConstant;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=AnnotationInstance{moved:=arraySelectors:ArraySelector;};ContainerContainer:=Package{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=AnnotationInstance{moved:=arraySelectors:ArraySelector;};ContainerContainer:=Annotable{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=arraySelectors:ArraySelector;};Extract:=ArraySelector;NewContainer:=AnnotationInstance{moved:=arraySelectors:ArraySelector;};ContainerContainer:=EnumConstant{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=parameter:AnnotationParameter;};Extract:=AnnotationParameter;NewContainer:=AnnotationInstance{moved:=parameter:AnnotationParameter;};ContainerContainer:=Package{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=parameter:AnnotationParameter;};Extract:=AnnotationParameter;NewContainer:=AnnotationInstance{moved:=parameter:AnnotationParameter;};ContainerContainer:=Annotable{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=parameter:AnnotationParameter;};Extract:=AnnotationParameter;NewContainer:=AnnotationInstance{moved:=parameter:AnnotationParameter;};ContainerContainer:=EnumConstant{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=next:Reference;};Extract:=Reference;NewContainer:=AnnotationInstance{moved:=next:Reference;};ContainerContainer:=Package{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=next:Reference;};Extract:=Reference;NewContainer:=AnnotationInstance{moved:=next:Reference;};ContainerContainer:=Annotable{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=next:Reference;};Extract:=Reference;NewContainer:=AnnotationInstance{moved:=next:Reference;};ContainerContainer:=EnumConstant{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=AnnotationInstance{moved:=typeArguments:TypeArgument;};ContainerContainer:=Package{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=AnnotationInstance{moved:=typeArguments:TypeArgument;};ContainerContainer:=Annotable{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationInstance{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=AnnotationInstance{moved:=typeArguments:TypeArgument;};ContainerContainer:=EnumConstant{source:=annotations:AnnotationInstance;target:=annotations:AnnotationInstance;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=SwitchCase{extracts:=statements:Statement;};Extract:=Statement;NewContainer:=SwitchCase{moved:=statements:Statement;};ContainerContainer:=Switch{source:=cases:SwitchCase;target:=cases:SwitchCase;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=Reference{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=ArrayInstantiation{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=Instantiation{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=ReflectiveClassReference{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for expressions" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=NestedExpression{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=ElementReference{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=MethodCall{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=ExplicitConstructorCall{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=ArrayInstantiationByValues{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=ArrayInstantiationByValuesTyped{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=AnnotationInstance{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=SelfReference{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=ArrayInstantiationBySize{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=NewConstructorCall{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=StringReference{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=PrimitiveTypeReference{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=ArrayInstantiationByValuesUntyped{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=ArraySelector{extracts:=position:Expression;};Extract:=Expression;NewContainer:=ArraySelector{moved:=position:Expression;};ContainerContainer:=IdentifierReference{source:=arraySelectors:ArraySelector;target:=arraySelectors:ArraySelector;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=PackageReference{extracts:=subpackages:PackageReference;};Extract:=PackageReference;NewContainer:=PackageReference{moved:=subpackages:PackageReference;};ContainerContainer:=PackageReference{source:=subpackages:PackageReference;target:=subpackages:PackageReference;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalLocalVariable{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalLocalVariable{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=LocalVariable{source:=additionalLocalVariables:AdditionalLocalVariable;target:=additionalLocalVariables:AdditionalLocalVariable;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalLocalVariable{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalLocalVariable{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=LocalVariable{source:=additionalLocalVariables:AdditionalLocalVariable;target:=additionalLocalVariables:AdditionalLocalVariable;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalLocalVariable{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=LocalVariable{source:=additionalLocalVariables:AdditionalLocalVariable;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalLocalVariable{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=LocalVariable{source:=additionalLocalVariables:AdditionalLocalVariable;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalLocalVariable{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalLocalVariable{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=LocalVariable{source:=additionalLocalVariables:AdditionalLocalVariable;target:=additionalLocalVariables:AdditionalLocalVariable;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalLocalVariable{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalLocalVariable{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=LocalVariable{source:=additionalLocalVariables:AdditionalLocalVariable;target:=additionalLocalVariables:AdditionalLocalVariable;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalLocalVariable{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=LocalVariable{source:=additionalLocalVariables:AdditionalLocalVariable;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalLocalVariable{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=LocalVariable{source:=additionalLocalVariables:AdditionalLocalVariable;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=AdditionalLocalVariable{extracts:=initialValue:Expression;};Extract:=Expression;NewContainer:=AdditionalLocalVariable{moved:=initialValue:Expression;};ContainerContainer:=LocalVariable{source:=additionalLocalVariables:AdditionalLocalVariable;target:=additionalLocalVariables:AdditionalLocalVariable;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=OrdinaryParameter{moved:=typeReference:TypeReference;};ContainerContainer:=ForEachLoop{source:=next:OrdinaryParameter;target:=next:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=OrdinaryParameter{moved:=typeReference:TypeReference;};ContainerContainer:=CatchBlock{source:=parameter:OrdinaryParameter;target:=parameter:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=OrdinaryParameter{moved:=typeArguments:TypeArgument;};ContainerContainer:=ForEachLoop{source:=next:OrdinaryParameter;target:=next:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=OrdinaryParameter{moved:=typeArguments:TypeArgument;};ContainerContainer:=CatchBlock{source:=parameter:OrdinaryParameter;target:=parameter:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=OrdinaryParameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ForEachLoop{source:=next:OrdinaryParameter;target:=next:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=OrdinaryParameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=CatchBlock{source:=parameter:OrdinaryParameter;target:=parameter:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=OrdinaryParameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ForEachLoop{source:=next:OrdinaryParameter;target:=next:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=OrdinaryParameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=CatchBlock{source:=parameter:OrdinaryParameter;target:=parameter:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=annotationsAndModifiers:AnnotationInstanceOrModifier;};Extract:=AnnotationInstanceOrModifier;NewContainer:=OrdinaryParameter{moved:=annotationsAndModifiers:AnnotationInstanceOrModifier;};ContainerContainer:=ForEachLoop{source:=next:OrdinaryParameter;target:=next:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=annotationsAndModifiers:AnnotationInstanceOrModifier;};Extract:=AnnotationInstanceOrModifier;NewContainer:=OrdinaryParameter{moved:=annotationsAndModifiers:AnnotationInstanceOrModifier;};ContainerContainer:=CatchBlock{source:=parameter:OrdinaryParameter;target:=parameter:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=OrdinaryParameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ForEachLoop{source:=next:OrdinaryParameter;target:=next:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=OrdinaryParameter{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=CatchBlock{source:=parameter:OrdinaryParameter;target:=parameter:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=OrdinaryParameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ForEachLoop{source:=next:OrdinaryParameter;target:=next:OrdinaryParameter;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=OrdinaryParameter{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=OrdinaryParameter{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=CatchBlock{source:=parameter:OrdinaryParameter;target:=parameter:OrdinaryParameter;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=NamespaceClassifierReference{extracts:=classifierReferences:ClassifierReference;};Extract:=ClassifierReference;NewContainer:=NamespaceClassifierReference{moved:=classifierReferences:ClassifierReference;};ContainerContainer:=Constructor{source:=exceptions:NamespaceClassifierReference;target:=exceptions:NamespaceClassifierReference;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=NamespaceClassifierReference{extracts:=classifierReferences:ClassifierReference;};Extract:=ClassifierReference;NewContainer:=NamespaceClassifierReference{moved:=classifierReferences:ClassifierReference;};ContainerContainer:=ExceptionThrower{source:=exceptions:NamespaceClassifierReference;target:=exceptions:NamespaceClassifierReference;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=NamespaceClassifierReference{extracts:=classifierReferences:ClassifierReference;};Extract:=ClassifierReference;NewContainer:=NamespaceClassifierReference{moved:=classifierReferences:ClassifierReference;};ContainerContainer:=AnnotationAttribute{source:=exceptions:NamespaceClassifierReference;target:=exceptions:NamespaceClassifierReference;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=NamespaceClassifierReference{extracts:=classifierReferences:ClassifierReference;};Extract:=ClassifierReference;NewContainer:=NamespaceClassifierReference{moved:=classifierReferences:ClassifierReference;};ContainerContainer:=ClassMethod{source:=exceptions:NamespaceClassifierReference;target:=exceptions:NamespaceClassifierReference;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=NamespaceClassifierReference{extracts:=classifierReferences:ClassifierReference;};Extract:=ClassifierReference;NewContainer:=NamespaceClassifierReference{moved:=classifierReferences:ClassifierReference;};ContainerContainer:=InterfaceMethod{source:=exceptions:NamespaceClassifierReference;target:=exceptions:NamespaceClassifierReference;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=NamespaceClassifierReference{extracts:=classifierReferences:ClassifierReference;};Extract:=ClassifierReference;NewContainer:=NamespaceClassifierReference{moved:=classifierReferences:ClassifierReference;};ContainerContainer:=Method{source:=exceptions:NamespaceClassifierReference;target:=exceptions:NamespaceClassifierReference;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=LocalVariable{extracts:=typeReference:TypeReference;};Extract:=TypeReference;NewContainer:=LocalVariable{moved:=typeReference:TypeReference;};ContainerContainer:=LocalVariableStatement{source:=variable:LocalVariable;target:=variable:LocalVariable;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=LocalVariable{extracts:=annotationsAndModifiers:AnnotationInstanceOrModifier;};Extract:=AnnotationInstanceOrModifier;NewContainer:=LocalVariable{moved:=annotationsAndModifiers:AnnotationInstanceOrModifier;};ContainerContainer:=LocalVariableStatement{source:=variable:LocalVariable;target:=variable:LocalVariable;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=LocalVariable{extracts:=additionalLocalVariables:AdditionalLocalVariable;};Extract:=AdditionalLocalVariable;NewContainer:=LocalVariable{moved:=additionalLocalVariables:AdditionalLocalVariable;};ContainerContainer:=LocalVariableStatement{source:=variable:LocalVariable;target:=variable:LocalVariable;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=LocalVariable{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=LocalVariable{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=LocalVariableStatement{source:=variable:LocalVariable;target:=variable:LocalVariable;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=LocalVariable{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=LocalVariable{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=LocalVariableStatement{source:=variable:LocalVariable;target:=variable:LocalVariable;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=LocalVariable{extracts:=initialValue:Expression;};Extract:=Expression;NewContainer:=LocalVariable{moved:=initialValue:Expression;};ContainerContainer:=LocalVariableStatement{source:=variable:LocalVariable;target:=variable:LocalVariable;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=LocalVariable{extracts:=typeArguments:TypeArgument;};Extract:=TypeArgument;NewContainer:=LocalVariable{moved:=typeArguments:TypeArgument;};ContainerContainer:=LocalVariableStatement{source:=variable:LocalVariable;target:=variable:LocalVariable;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=LocalVariable{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=LocalVariable{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=LocalVariableStatement{source:=variable:LocalVariable;target:=variable:LocalVariable;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=LocalVariable{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=LocalVariable{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=LocalVariableStatement{source:=variable:LocalVariable;target:=variable:LocalVariable;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalField{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Field{source:=typeArguments:TypeArgument;target:=additionalFields:AdditionalField;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalLocalVariable{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=LocalVariable{source:=typeArguments:TypeArgument;target:=additionalLocalVariables:AdditionalLocalVariable;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalField{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Field{source:=typeArguments:TypeArgument;target:=additionalFields:AdditionalField;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalLocalVariable{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=LocalVariable{source:=typeArguments:TypeArgument;target:=additionalLocalVariables:AdditionalLocalVariable;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValues{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=MethodCall{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=MethodCall{source:=typeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for types" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ClassifierReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=SelfReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Parameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=IdentifierReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for expressions" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=NestedExpression{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=typeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Variable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=OrdinaryParameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=callTypeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValuesUntyped{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=MethodCall{source:=callTypeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=MethodCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Reference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ArrayInstantiationBySize{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=PrimitiveTypeReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValuesTyped{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ReflectiveClassReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Field{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ElementReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=AnnotationInstance{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=StringReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=LocalVariable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ExplicitConstructorCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Instantiation{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for generics" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=TypeArgumentable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=VariableLengthParameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ArrayInstantiation{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for generics" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=CallTypeArgumentable{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValues{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=MethodCall{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=MethodCall{source:=typeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for types" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ClassifierReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=SelfReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Parameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=IdentifierReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for expressions" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=NestedExpression{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=typeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Variable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=OrdinaryParameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=callTypeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValuesUntyped{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=MethodCall{source:=callTypeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=MethodCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Reference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ArrayInstantiationBySize{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=PrimitiveTypeReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValuesTyped{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ReflectiveClassReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Field{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ElementReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=AnnotationInstance{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=StringReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=LocalVariable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ExplicitConstructorCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Instantiation{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for generics" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=TypeArgumentable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=VariableLengthParameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ArrayInstantiation{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for generics" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsBefore:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=CallTypeArgumentable{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalField{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Field{source:=typeArguments:TypeArgument;target:=additionalFields:AdditionalField;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalLocalVariable{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=LocalVariable{source:=typeArguments:TypeArgument;target:=additionalLocalVariables:AdditionalLocalVariable;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalField{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Field{source:=typeArguments:TypeArgument;target:=additionalFields:AdditionalField;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=AdditionalLocalVariable{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=LocalVariable{source:=typeArguments:TypeArgument;target:=additionalLocalVariables:AdditionalLocalVariable;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValues{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=MethodCall{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=MethodCall{source:=typeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for types" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ClassifierReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=SelfReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Parameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=IdentifierReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for expressions" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=NestedExpression{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=typeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Variable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=OrdinaryParameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=callTypeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValuesUntyped{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=MethodCall{source:=callTypeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=MethodCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Reference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ArrayInstantiationBySize{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=PrimitiveTypeReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValuesTyped{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ReflectiveClassReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Field{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ElementReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=AnnotationInstance{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=StringReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=LocalVariable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ExplicitConstructorCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=Instantiation{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for generics" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=TypeArgumentable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=VariableLengthParameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=ArrayInstantiation{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for generics" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsBefore:ArrayDimension;};ContainerContainer:=CallTypeArgumentable{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValues{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=MethodCall{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=MethodCall{source:=typeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for types" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ClassifierReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=SelfReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Parameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=IdentifierReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for expressions" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=NestedExpression{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=typeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Variable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=OrdinaryParameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=NewConstructorCall{source:=callTypeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValuesUntyped{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=MethodCall{source:=callTypeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=MethodCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Reference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ArrayInstantiationBySize{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=PrimitiveTypeReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ArrayInstantiationByValuesTyped{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ReflectiveClassReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Field{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ElementReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=AnnotationInstance{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for references" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=StringReference{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for variables" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=LocalVariable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ExplicitConstructorCall{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=Instantiation{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for generics" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=TypeArgumentable{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for parameters" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=VariableLengthParameter{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for arrays" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=ArrayInstantiation{source:=typeArguments:TypeArgument;target:=typeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for generics" maps <ExtractXwithReferenceClass> {OrigContainer:=TypeArgument{extracts:=arrayDimensionsAfter:ArrayDimension;};Extract:=ArrayDimension;NewContainer:=TypeArgument{moved:=arrayDimensionsAfter:ArrayDimension;};ContainerContainer:=CallTypeArgumentable{source:=callTypeArguments:TypeArgument;target:=callTypeArguments:TypeArgument;};}
"ExtractXwithReferenceClass for annotations" maps <ExtractXwithReferenceClass> {OrigContainer:=AnnotationAttributeSetting{extracts:=value:AnnotationValue;};Extract:=AnnotationValue;NewContainer:=AnnotationAttributeSetting{moved:=value:AnnotationValue;};ContainerContainer:=AnnotationParameterList{source:=settings:AnnotationAttributeSetting;target:=settings:AnnotationAttributeSetting;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AnonymousClass{extracts:=members:Member;};Extract:=Member;NewContainer:=AnonymousClass{moved:=members:Member;};ContainerContainer:=EnumConstant{source:=anonymousClass:AnonymousClass;target:=anonymousClass:AnonymousClass;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=AnonymousClass{extracts:=members:Member;};Extract:=Member;NewContainer:=AnonymousClass{moved:=members:Member;};ContainerContainer:=NewConstructorCall{source:=anonymousClass:AnonymousClass;target:=anonymousClass:AnonymousClass;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AnonymousClass{extracts:=members:Member;};Extract:=Member;NewContainer:=AnonymousClass{moved:=defaultMembers:Member;};ContainerContainer:=EnumConstant{source:=anonymousClass:AnonymousClass;target:=anonymousClass:AnonymousClass;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=AnonymousClass{extracts:=members:Member;};Extract:=Member;NewContainer:=AnonymousClass{moved:=defaultMembers:Member;};ContainerContainer:=NewConstructorCall{source:=anonymousClass:AnonymousClass;target:=anonymousClass:AnonymousClass;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AnonymousClass{extracts:=defaultMembers:Member;};Extract:=Member;NewContainer:=AnonymousClass{moved:=members:Member;};ContainerContainer:=EnumConstant{source:=anonymousClass:AnonymousClass;target:=anonymousClass:AnonymousClass;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=AnonymousClass{extracts:=defaultMembers:Member;};Extract:=Member;NewContainer:=AnonymousClass{moved:=members:Member;};ContainerContainer:=NewConstructorCall{source:=anonymousClass:AnonymousClass;target:=anonymousClass:AnonymousClass;};}
"ExtractXwithReferenceClass for members" maps <ExtractXwithReferenceClass> {OrigContainer:=AnonymousClass{extracts:=defaultMembers:Member;};Extract:=Member;NewContainer:=AnonymousClass{moved:=defaultMembers:Member;};ContainerContainer:=EnumConstant{source:=anonymousClass:AnonymousClass;target:=anonymousClass:AnonymousClass;};}
"ExtractXwithReferenceClass for instantiations" maps <ExtractXwithReferenceClass> {OrigContainer:=AnonymousClass{extracts:=defaultMembers:Member;};Extract:=Member;NewContainer:=AnonymousClass{moved:=defaultMembers:Member;};ContainerContainer:=NewConstructorCall{source:=anonymousClass:AnonymousClass;target:=anonymousClass:AnonymousClass;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=ConcreteClassifier{extracts:=defaultMembers:Member;};Extract:=Member;NewContainer:=ConcreteClassifier{moved:=defaultMembers:Member;};ContainerContainer:=CompilationUnit{source:=classifiers:ConcreteClassifier;target:=classifiers:ConcreteClassifier;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=ConcreteClassifier{extracts:=defaultMembers:Member;};Extract:=Member;NewContainer:=ConcreteClassifier{moved:=members:Member;};ContainerContainer:=CompilationUnit{source:=classifiers:ConcreteClassifier;target:=classifiers:ConcreteClassifier;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=ConcreteClassifier{extracts:=members:Member;};Extract:=Member;NewContainer:=ConcreteClassifier{moved:=defaultMembers:Member;};ContainerContainer:=CompilationUnit{source:=classifiers:ConcreteClassifier;target:=classifiers:ConcreteClassifier;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=ConcreteClassifier{extracts:=members:Member;};Extract:=Member;NewContainer:=ConcreteClassifier{moved:=members:Member;};ContainerContainer:=CompilationUnit{source:=classifiers:ConcreteClassifier;target:=classifiers:ConcreteClassifier;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=ConcreteClassifier{extracts:=typeParameters:TypeParameter;};Extract:=TypeParameter;NewContainer:=ConcreteClassifier{moved:=typeParameters:TypeParameter;};ContainerContainer:=CompilationUnit{source:=classifiers:ConcreteClassifier;target:=classifiers:ConcreteClassifier;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=ConcreteClassifier{extracts:=annotationsAndModifiers:AnnotationInstanceOrModifier;};Extract:=AnnotationInstanceOrModifier;NewContainer:=ConcreteClassifier{moved:=annotationsAndModifiers:AnnotationInstanceOrModifier;};ContainerContainer:=CompilationUnit{source:=classifiers:ConcreteClassifier;target:=classifiers:ConcreteClassifier;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=CatchBlock{extracts:=statements:Statement;};Extract:=Statement;NewContainer:=CatchBlock{moved:=statements:Statement;};ContainerContainer:=TryBlock{source:=catcheBlocks:CatchBlock;target:=catcheBlocks:CatchBlock;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=CatchBlock{extracts:=statements:Statement;};Extract:=Statement;NewContainer:=Block{moved:=statements:Statement;};ContainerContainer:=TryBlock{source:=catcheBlocks:CatchBlock;target:=finallyBlock:Block;};}
"ExtractXwithReferenceClass for statements" maps <ExtractXwithReferenceClass> {OrigContainer:=CatchBlock{extracts:=parameter:OrdinaryParameter;};Extract:=OrdinaryParameter;NewContainer:=CatchBlock{moved:=parameter:OrdinaryParameter;};ContainerContainer:=TryBlock{source:=catcheBlocks:CatchBlock;target:=catcheBlocks:CatchBlock;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=CompilationUnit{extracts:=classifiers:ConcreteClassifier;};Extract:=ConcreteClassifier;NewContainer:=CompilationUnit{moved:=classifiers:ConcreteClassifier;};ContainerContainer:=Package{source:=compilationUnits:CompilationUnit;target:=compilationUnits:CompilationUnit;};}
"ExtractXwithReferenceClass for containers" maps <ExtractXwithReferenceClass> {OrigContainer:=CompilationUnit{extracts:=imports:Import;};Extract:=Import;NewContainer:=CompilationUnit{moved:=imports:Import;};ContainerContainer:=Package{source:=compilationUnits:CompilationUnit;target:=compilationUnits:CompilationUnit;};}
