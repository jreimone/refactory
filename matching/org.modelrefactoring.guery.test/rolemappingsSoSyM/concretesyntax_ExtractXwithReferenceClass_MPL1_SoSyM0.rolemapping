"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=EnumLiteralTerminal{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=EnumTerminal{source:=literals:EnumLiteralTerminal;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=EnumLiteralTerminal{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=EnumLiteralTerminal{moved:=children:SyntaxElement;};ContainerContainer:=EnumTerminal{source:=literals:EnumLiteralTerminal;target:=literals:EnumLiteralTerminal;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=SyntaxElement{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=Rule{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=Sequence{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=CsString{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=WhiteSpaces{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=EnumTerminal{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=Containment{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=PlaceholderUsingSpecifiedToken{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=PlaceholderInQuotes{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=Terminal{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=Placeholder{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=CardinalityDefinition{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=PlaceholderUsingDefaultToken{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=EnumLiteralTerminal{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=BooleanTerminal{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=Choice{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=CompoundDefinition{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=LineBreak{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=SyntaxElement{moved:=children:SyntaxElement;};ContainerContainer:=Definition{source:=children:SyntaxElement;target:=children:SyntaxElement;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=SyntaxElement{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=EnumLiteralTerminal{moved:=children:SyntaxElement;};ContainerContainer:=EnumTerminal{source:=children:SyntaxElement;target:=literals:EnumLiteralTerminal;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=GenClassCache{extracts:=_qualifiedInterfaceNameCache:GenClassCacheEntry;};Extract:=GenClassCacheEntry;NewContainer:=GenClassCache{moved:=_qualifiedInterfaceNameCache:GenClassCacheEntry;};ContainerContainer:=ConcreteSyntax{source:=_genClassCache:GenClassCache;target:=_genClassCache:GenClassCache;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Rule{extracts:=children:SyntaxElement;};Extract:=SyntaxElement;NewContainer:=Rule{moved:=children:SyntaxElement;};ContainerContainer:=ConcreteSyntax{source:=rules:Rule;target:=rules:Rule;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Rule{extracts:=annotations:Annotation;};Extract:=Annotation;NewContainer:=Rule{moved:=annotations:Annotation;};ContainerContainer:=ConcreteSyntax{source:=rules:Rule;target:=rules:Rule;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Rule{extracts:=annotations:Annotation;};Extract:=Annotation;NewContainer:=Import{moved:=annotations:Annotation;};ContainerContainer:=ConcreteSyntax{source:=rules:Rule;target:=imports:Import;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Annotation{extracts:=parameters:KeyValuePair;};Extract:=KeyValuePair;NewContainer:=Annotation{moved:=parameters:KeyValuePair;};ContainerContainer:=Annotable{source:=annotations:Annotation;target:=annotations:Annotation;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Annotation{extracts:=parameters:KeyValuePair;};Extract:=KeyValuePair;NewContainer:=Annotation{moved:=parameters:KeyValuePair;};ContainerContainer:=Rule{source:=annotations:Annotation;target:=annotations:Annotation;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Annotation{extracts:=parameters:KeyValuePair;};Extract:=KeyValuePair;NewContainer:=Annotation{moved:=parameters:KeyValuePair;};ContainerContainer:=Import{source:=annotations:Annotation;target:=annotations:Annotation;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Annotation{extracts:=parameters:KeyValuePair;};Extract:=KeyValuePair;NewContainer:=Annotation{moved:=parameters:KeyValuePair;};ContainerContainer:=TokenRedefinition{source:=annotations:Annotation;target:=annotations:Annotation;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Annotation{extracts:=parameters:KeyValuePair;};Extract:=KeyValuePair;NewContainer:=Annotation{moved:=parameters:KeyValuePair;};ContainerContainer:=NormalTokenDefinition{source:=annotations:Annotation;target:=annotations:Annotation;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Annotation{extracts:=parameters:KeyValuePair;};Extract:=KeyValuePair;NewContainer:=Annotation{moved:=parameters:KeyValuePair;};ContainerContainer:=ConcreteSyntax{source:=annotations:Annotation;target:=annotations:Annotation;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Import{extracts:=annotations:Annotation;};Extract:=Annotation;NewContainer:=Rule{moved:=annotations:Annotation;};ContainerContainer:=ConcreteSyntax{source:=imports:Import;target:=rules:Rule;};}
"ExtractXwithReferenceClass for concretesyntax" maps <ExtractXwithReferenceClass> {OrigContainer:=Import{extracts:=annotations:Annotation;};Extract:=Annotation;NewContainer:=Import{moved:=annotations:Annotation;};ContainerContainer:=ConcreteSyntax{source:=imports:Import;target:=imports:Import;};}
