ROLEMODELMAPPING FOR <http://www.emftext.org/language/pl0>

"ExtractXwithReferenceClass for pl0" maps <ExtractXwithReferenceClass> {
	OrigContainer := Body {
		extracts := statements:CallStatement -> procedure:ProcedureDeclaration;
		referer := statements:CallStatement;
	};
	Extract := ProcedureDeclaration;
	NewContainer := ProcedureDeclaration {
		moved := block:Block -> owner:ProcedureDeclaration;
	};
	ContainerContainer := Block {
		source := body:Body;
		target := procedures:ProcedureDeclaration;
	};
	MovedReference := CallStatement {
		containerRef := procedure:ProcedureDeclaration;
	};
	
	
}

"ExtractXwithReferenceClass for pl0" maps <ExtractXwithReferenceClass> {
	OrigContainer := ProcedureDeclaration {
		extracts := block:Block -> allOwners:Program;
		referer := block:Block;
	};
	Extract := Program;
	NewContainer := ProcedureDeclaration {
		moved := block:Block -> allOwners:Program;
	};
	ContainerContainer := Block {
		source := procedures:ProcedureDeclaration;
		target := procedures:ProcedureDeclaration;
	};
	MovedReference := Block {
		containerRef := allOwners:ProcedureDeclaration;
	};
	
	
}

"ExtractXwithReferenceClass for pl0" maps <ExtractXwithReferenceClass> {
	OrigContainer := ProcedureDeclaration {
		extracts := block:Block -> allOwners:Program;
		referer := block:Block;
	};
	Extract := Program;
	NewContainer := ProcedureDeclaration {
		moved := block:Block -> allOwners:Program;
	};
	ContainerContainer := Block {
		source := procedures:ProcedureDeclaration;
		target := procedures:ProcedureDeclaration;
	};
	MovedReference := Block {
		containerRef := owner:ProcedureDeclaration;
	};
	
	
}

"ExtractXwithReferenceClass for pl0" maps <ExtractXwithReferenceClass> {
	OrigContainer := ProcedureDeclaration {
		extracts := block:Block -> owner:ProcedureDeclaration;
		referer := block:Block;
	};
	Extract := ProcedureDeclaration;
	NewContainer := ProcedureDeclaration {
		moved := block:Block -> owner:ProcedureDeclaration;
	};
	ContainerContainer := Block {
		source := procedures:ProcedureDeclaration;
		target := procedures:ProcedureDeclaration;
	};
	MovedReference := Block {
		containerRef := allOwners:ProcedureDeclaration;
	};
	
	
}

"ExtractXwithReferenceClass for pl0" maps <ExtractXwithReferenceClass> {
	OrigContainer := ProcedureDeclaration {
		extracts := block:Block -> owner:ProcedureDeclaration;
		referer := block:Block;
	};
	Extract := ProcedureDeclaration;
	NewContainer := ProcedureDeclaration {
		moved := block:Block -> owner:ProcedureDeclaration;
	};
	ContainerContainer := Block {
		source := procedures:ProcedureDeclaration;
		target := procedures:ProcedureDeclaration;
	};
	MovedReference := Block {
		containerRef := owner:ProcedureDeclaration;
	};
	
	
}