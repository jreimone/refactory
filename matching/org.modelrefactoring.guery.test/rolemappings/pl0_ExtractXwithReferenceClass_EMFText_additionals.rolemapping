"ExtractXwithReferenceClass for pl0" maps <ExtractXwithReferenceClass> {
	OrigContainer := Body {
		extracts := statements:IfStatement -> else:Body -> statements:Assignment;
		referer := statements:CallStatement;
	};
	Extract := Assignment;
	NewContainer := ProcedureDeclaration {
		moved := block:Block -> body:Body -> statements:Assignment;
	};
	ContainerContainer := Block {
		source := body:Body;
		target := procedures:ProcedureDeclaration;
	};
	MovedReference := CallStatement {
		containerRef := procedure:ProcedureDeclaration;
	};
	
	
}"ExtractXwithReferenceClass for pl0" maps <ExtractXwithReferenceClass> {
	OrigContainer := Body {
		extracts := statements:IfStatement -> else:Body -> statements:CallStatement;
		referer := statements:CallStatement;
	};
	Extract := CallStatement;
	NewContainer := ProcedureDeclaration {
		moved := block:Block -> body:Body -> statements:CallStatement;
	};
	ContainerContainer := Block {
		source := body:Body;
		target := procedures:ProcedureDeclaration;
	};
	MovedReference := CallStatement {
		containerRef := procedure:ProcedureDeclaration;
	};
	
	
}"ExtractXwithReferenceClass for pl0" maps <ExtractXwithReferenceClass> {
	OrigContainer := Body {
		extracts := statements:IfStatement -> else:Body -> statements:Statement;
		referer := statements:CallStatement;
	};
	Extract := Statement;
	NewContainer := ProcedureDeclaration {
		moved := block:Block -> body:Body -> statements:Statement;
	};
	ContainerContainer := Block {
		source := body:Body;
		target := procedures:ProcedureDeclaration;
	};
	MovedReference := CallStatement {
		containerRef := procedure:ProcedureDeclaration;
	};
	
	
}"ExtractXwithReferenceClass for pl0" maps <ExtractXwithReferenceClass> {
	OrigContainer := Body {
		extracts := statements:IfStatement -> else:Body -> statements:WhileStatement;
		referer := statements:CallStatement;
	};
	Extract := WhileStatement;
	NewContainer := ProcedureDeclaration {
		moved := block:Block -> body:Body -> statements:WhileStatement;
	};
	ContainerContainer := Block {
		source := body:Body;
		target := procedures:ProcedureDeclaration;
	};
	MovedReference := CallStatement {
		containerRef := procedure:ProcedureDeclaration;
	};
	
	
}"ExtractXwithReferenceClass for pl0" maps <ExtractXwithReferenceClass> {
	OrigContainer := Body {
		extracts := statements:IfStatement -> else:Body;
		referer := statements:CallStatement;
	};
	Extract := Body;
	NewContainer := ProcedureDeclaration {
		moved := block:Block -> body:Body;
	};
	ContainerContainer := Block {
		source := body:Body;
		target := procedures:ProcedureDeclaration;
	};
	MovedReference := CallStatement {
		containerRef := procedure:ProcedureDeclaration;
	};
	
	
}