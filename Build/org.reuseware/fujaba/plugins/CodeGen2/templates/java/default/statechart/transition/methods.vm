### TypeOf[ ${token} ] := de.uni_kassel.fujaba.codegen.rules.Token
### TypeOf[ ${utility} ] := de.uni_kassel.fujaba.codegen.Utility
#parse("$lang/default:statechart/transition/import.vm" )
## TODO dirty bugfix to copy signals params
#set( $parentToken = $token.Parent )
### TypeOf[ ${parentToken} ] := de.uni_kassel.fujaba.codegen.classdiag.ASGElementToken
#set( $statechart = $parentToken.Element )
#set( $class = $statechart.ParentElement )
### TypeOf[ ${class} ] := de.uni_paderborn.fujaba.metamodel.structure.FClass
#set( $method = $class.getFromMethodsByShortName($eventName) )
##
#if( $after || $when )

public void $eventName()
{
   FEvent event = new FEvent ("$eventName" );
   myFReactive.enqueueEvent (event, FReactive.INTERNAL_EVENT);
   myFReactive.notifyMe ();
}

#end
#if ( !$utility.isNullOrEmpty($action) )

public void $actionName(##
## TODO dirty bugfix to copy signals params
#set( $params = $method.iteratorOfParam() )
#parse("$lang/default:classDiag/method/params.vm" )
)
{
   $action;
}

#end
#if( $guardText )

public boolean $guardName(##
## TODO dirty bugfix to copy signals params
#set( $params = $method.iteratorOfParam() )
#parse("$lang/default:classDiag/method/params.vm" )
)
{
   return ($guardText);
}

#end
