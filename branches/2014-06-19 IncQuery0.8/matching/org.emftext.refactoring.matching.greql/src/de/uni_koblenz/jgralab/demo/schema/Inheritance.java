/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.demo.schema;

import de.uni_koblenz.jgralab.EdgeDirection;

import de.uni_koblenz.jgralab.demo.schema.Node;
/**
 * FromVertexClass: Node
 * FromRoleName : child
 * ToVertexClass: Node
 * ToRoleName : parent
 */

public interface Inheritance extends de.uni_koblenz.jgralab.Edge {

	public static final de.uni_koblenz.jgralab.schema.EdgeClass EC = de.uni_koblenz.jgralab.demo.schema.GraphSchema.instance().getGraphClass().getEdgeClass("Inheritance");

	public java.lang.String get_child();

	public void set_child(java.lang.String _child);

	public java.lang.String get_parent();

	public void set_parent(java.lang.String _parent);

	/**
	 * @return the next de.uni_koblenz.jgralab.demo.schema.Inheritance edge in the global edge sequence
	 */
	public de.uni_koblenz.jgralab.demo.schema.Inheritance getNextInheritanceInGraph();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralab.demo.schema.Inheritance at the "this" vertex
	 */
	public de.uni_koblenz.jgralab.demo.schema.Inheritance getNextInheritanceIncidence();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralab.demo.schema.Inheritance at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralab.demo.schema.Inheritance getNextInheritanceIncidence(EdgeDirection orientation);
	public Node getAlpha();
	public Node getOmega();
}
